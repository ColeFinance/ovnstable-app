{
  "address": "0x5Fb8ab30E3cC24b976c005e0C4B5eAf88A537276",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenExchange",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aUsdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_a3CrvToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc2AUsdcActionBuilder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "a3CrvToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aUsdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "diffToTarget",
              "type": "int256"
            },
            {
              "internalType": "bool",
              "name": "targetIsZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IMark2Market.BalanceAssetPrices[]",
          "name": "assetPrices",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "contract ITokenExchange",
              "name": "tokenExchange",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "code",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exchangeAll",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ],
          "internalType": "struct IActionBuilder.ExchangeAction[]",
          "name": "actions",
          "type": "tuple[]"
        }
      ],
      "name": "buildAction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ITokenExchange",
              "name": "tokenExchange",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "code",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exchangeAll",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ],
          "internalType": "struct IActionBuilder.ExchangeAction",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActionCode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenExchange",
      "outputs": [
        {
          "internalType": "contract ITokenExchange",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc2AUsdcActionBuilder",
      "outputs": [
        {
          "internalType": "contract IActionBuilder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8f8ff81c23eb5128ab3136945bac114d0a3c10f18f391000a62dc7c09ec1027a",
  "receipt": {
    "to": null,
    "from": "0x5CB01385d3097b6a189d1ac8BA3364D900666445",
    "contractAddress": "0x5Fb8ab30E3cC24b976c005e0C4B5eAf88A537276",
    "transactionIndex": 41,
    "gasUsed": "687294",
    "logsBloom": "0x
    "blockHash": "0x46af731b969bca3cb89374ac29c0be6ddac61ad89f34510bc238261924452b03",
    "transactionHash": "0x8f8ff81c23eb5128ab3136945bac114d0a3c10f18f391000a62dc7c09ec1027a",
    "logs": [
      {
        "transactionIndex": 41,
        "blockNumber": 22911113,
        "transactionHash": "0x8f8ff81c23eb5128ab3136945bac114d0a3c10f18f391000a62dc7c09ec1027a",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005cb01385d3097b6a189d1ac8ba3364d900666445",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000aaec514ed688000000000000000000000000000000000000000000000000009b1a62f7e107fae80000000000000000000000000000000000000000000004c85fb5ff59e355c6d60000000000000000000000000000000000000000000000009a6f76a6923172e80000000000000000000000000000000000000000000004c86060ebab322c4ed6",
        "logIndex": 133,
        "blockHash": "0x46af731b969bca3cb89374ac29c0be6ddac61ad89f34510bc238261924452b03"
      }
    ],
    "blockNumber": 22911113,
    "cumulativeGasUsed": "4366535",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x68F78b610b4C0742F2b08eD48665b9F0d3d002C4",
    "0x1a13F4Ca1d028320A707D99520AbFefca3998b7F",
    "0xE7a24EF0C5e95Ffb0f6684b813A78F2a3AD7D171",
    "0x3110470B36Ac36aF0fE84ace423ED64d1417e624"
  ],
  "solcInputHash": "a52a09ed2b2706cd99c66d36846223b4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenExchange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aUsdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_a3CrvToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc2AUsdcActionBuilder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"a3CrvToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aUsdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"diffToTarget\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"targetIsZero\",\"type\":\"bool\"}],\"internalType\":\"struct IMark2Market.BalanceAssetPrices[]\",\"name\":\"assetPrices\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"contract ITokenExchange\",\"name\":\"tokenExchange\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exchangeAll\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"internalType\":\"struct IActionBuilder.ExchangeAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"name\":\"buildAction\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ITokenExchange\",\"name\":\"tokenExchange\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exchangeAll\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"internalType\":\"struct IActionBuilder.ExchangeAction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActionCode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenExchange\",\"outputs\":[{\"internalType\":\"contract ITokenExchange\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc2AUsdcActionBuilder\",\"outputs\":[{\"internalType\":\"contract IActionBuilder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/action_builders/AUsdc2A3CrvActionBuilder.sol\":\"AUsdc2A3CrvActionBuilder\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"contracts/action_builders/AUsdc2A3CrvActionBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../interfaces/IActionBuilder.sol\\\";\\nimport \\\"../interfaces/IMark2Market.sol\\\";\\n\\ncontract AUsdc2A3CrvActionBuilder is IActionBuilder {\\n    bytes32 constant ACTION_CODE = keccak256(\\\"AUsdc2A3Crv\\\");\\n\\n    ITokenExchange public tokenExchange;\\n    IERC20 public aUsdcToken;\\n    IERC20 public a3CrvToken;\\n    IActionBuilder public usdc2AUsdcActionBuilder;\\n\\n    constructor(\\n        address _tokenExchange,\\n        address _aUsdcToken,\\n        address _a3CrvToken,\\n        address _usdc2AUsdcActionBuilder\\n    ) {\\n        require(_tokenExchange != address(0), \\\"Zero address not allowed\\\");\\n        require(_aUsdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_a3CrvToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdc2AUsdcActionBuilder != address(0), \\\"Zero address not allowed\\\");\\n\\n        tokenExchange = ITokenExchange(_tokenExchange);\\n        aUsdcToken = IERC20(_aUsdcToken);\\n        a3CrvToken = IERC20(_a3CrvToken);\\n        usdc2AUsdcActionBuilder = IActionBuilder(_usdc2AUsdcActionBuilder);\\n    }\\n\\n    function getActionCode() external pure override returns (bytes32) {\\n        return ACTION_CODE;\\n    }\\n\\n    function buildAction(\\n        IMark2Market.BalanceAssetPrices[] memory assetPrices,\\n        ExchangeAction[] memory actions\\n    ) external view override returns (ExchangeAction memory) {\\n        // get diff from iteration over prices because can't use mapping in memory params to external functions\\n        IMark2Market.BalanceAssetPrices memory aUsdcPrices;\\n        IMark2Market.BalanceAssetPrices memory a3CrvPrices;\\n        for (uint8 i = 0; i < assetPrices.length; i++) {\\n            if (assetPrices[i].asset == address(aUsdcToken)) {\\n                aUsdcPrices = assetPrices[i];\\n                continue;\\n            }\\n            if (assetPrices[i].asset == address(a3CrvToken)) {\\n                a3CrvPrices = assetPrices[i];\\n                continue;\\n            }\\n        }\\n\\n        // get diffUsdc2AUsdc to correct current diff\\n        ExchangeAction memory usdc2AUsdcAction;\\n        bytes32 usdc2AUsdcActionCode = usdc2AUsdcActionBuilder.getActionCode();\\n        bool foundDependencyAction = false;\\n        for (uint8 i = 0; i < actions.length; i++) {\\n            // here we need USDC diff to make action right\\n            if (actions[i].code == usdc2AUsdcActionCode) {\\n                usdc2AUsdcAction = actions[i];\\n                foundDependencyAction = true;\\n                break;\\n            }\\n        }\\n        require(foundDependencyAction, \\\"AUsdc2A3CrvActionBuilder: Required action not in action list, check calc ordering\\\");\\n\\n        // use aUsdc diff to start calc diff\\n        int256 diff = aUsdcPrices.diffToTarget;\\n\\n        // correct diff value by usdc2AUsdc diff\\n        if (address(aUsdcToken) == address(usdc2AUsdcAction.to)) {\\n            // if in action move aUsdc->usdc then we should decrease diff (sub)\\n            diff = diff - int256(usdc2AUsdcAction.amount);\\n        } else {\\n            // if in action move usdc->aUsdc then we should increase diff (add)\\n            diff = diff + int256(usdc2AUsdcAction.amount);\\n        }\\n\\n        uint256 amount;\\n        IERC20 from;\\n        IERC20 to;\\n        bool targetIsZero;\\n        //TODO: need to define needed of usage for targetIsZero\\n        if (diff < 0) {\\n            amount = uint256(- diff);\\n            from = aUsdcToken;\\n            to = a3CrvToken;\\n            targetIsZero = aUsdcPrices.targetIsZero;\\n        } else {\\n            amount = uint256(diff);\\n            from = a3CrvToken;\\n            to = aUsdcToken;\\n            targetIsZero = a3CrvPrices.targetIsZero;\\n        }\\n\\n        ExchangeAction memory action = ExchangeAction(\\n            tokenExchange,\\n            ACTION_CODE,\\n            from,\\n            to,\\n            amount,\\n            targetIsZero,\\n            false\\n        );\\n\\n        return action;\\n    }\\n}\\n\",\"keccak256\":\"0xd634930bd1201117af5c9b1dbd3a25a9ffff8a2ce438a63cf7e10fbdd8887f5a\",\"license\":\"MIT\"},\"contracts/interfaces/IActionBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IMark2Market.sol\\\";\\nimport \\\"./ITokenExchange.sol\\\";\\n\\ninterface IActionBuilder {\\n    struct ExchangeAction {\\n        ITokenExchange tokenExchange;\\n        bytes32 code;\\n        IERC20 from;\\n        IERC20 to;\\n        uint256 amount; // amount at usdc with 6 digit fractions\\n        bool exchangeAll; // mean that we should trade all tokens to zero ownership\\n        bool executed;\\n    }\\n\\n    function getActionCode() external pure returns (bytes32);\\n\\n    function buildAction(\\n        IMark2Market.BalanceAssetPrices[] memory assetPrices,\\n        ExchangeAction[] memory actions\\n    ) external view returns (ExchangeAction memory);\\n}\\n\",\"keccak256\":\"0x86dc01c83d7f8c96b8c1d62ebb80e684a76c8e92a100cb8b5b469b166caea8ca\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IMark2Market.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0 <0.9.0;\\n\\ninterface IMark2Market {\\n    struct AssetPrices {\\n        address asset;\\n        uint256 amountInVault; // balance on Vault\\n        uint256 usdcPriceInVault; // current total price of balance at USDC\\n        //\\n        uint256 usdcPriceDenominator;\\n        uint256 usdcSellPrice;\\n        uint256 usdcBuyPrice;\\n        //\\n        uint256 decimals;\\n        string name;\\n        string symbol;\\n    }\\n\\n    struct TotalAssetPrices {\\n        AssetPrices[] assetPrices;\\n        uint256 totalUsdcPrice;\\n    }\\n\\n    struct BalanceAssetPrices {\\n        address asset;\\n        int256 diffToTarget; // diff usdcPriceInVault to target in portfolio\\n        bool targetIsZero; // mean that we should trade all tokens to zero ownership\\n    }\\n\\n    function assetPrices() external view returns (TotalAssetPrices memory);\\n\\n    function totalUsdcPrice() external view returns (uint256);\\n\\n    function assetPricesForBalance() external view returns (BalanceAssetPrices[] memory);\\n\\n    function assetPricesForBalance(address withdrawToken, uint256 withdrawAmount) external view returns (BalanceAssetPrices[] memory);\\n}\\n\",\"keccak256\":\"0x4bb763b2c3623fc2857547a5970e09789fc193590a005b6693d3df9545d9e69a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000bea38038062000bea833981016040819052610031916101b9565b6001600160a01b03841661007b5760405162461bcd60e51b8152602060048201526018602482015260008051602062000bca83398151915260448201526064015b60405180910390fd5b6001600160a01b0383166100c05760405162461bcd60e51b8152602060048201526018602482015260008051602062000bca8339815191526044820152606401610072565b6001600160a01b0382166101055760405162461bcd60e51b8152602060048201526018602482015260008051602062000bca8339815191526044820152606401610072565b6001600160a01b03811661014a5760405162461bcd60e51b8152602060048201526018602482015260008051602062000bca8339815191526044820152606401610072565b600080546001600160a01b039586166001600160a01b031991821617909155600180549486169482169490941790935560028054928516928416929092179091556003805491909316911617905561020d565b80516001600160a01b03811681146101b457600080fd5b919050565b600080600080608085870312156101cf57600080fd5b6101d88561019d565b93506101e66020860161019d565b92506101f46040860161019d565b91506102026060860161019d565b905092959194509250565b6109ad806200021d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806318ad3088146100675780632d8647521461009a578063636f6159146100c55780637045352f146100d857806383909eeb14610150578063cc3d6cf714610163575b600080fd5b6040517fc1be4323348a37ae69ece55f3e69ca17827a2e81977d80591ce3d28155a4296a81526020015b60405180910390f35b6002546100ad906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6000546100ad906001600160a01b031681565b6100eb6100e63660046106a8565b610176565b604051610091919081516001600160a01b03908116825260208084015190830152604080840151821690830152606080840151909116908201526080808301519082015260a08281015115159082015260c09182015115159181019190915260e00190565b6003546100ad906001600160a01b031681565b6001546100ad906001600160a01b031681565b6040805160e0810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284518082018652838152808301849052808601849052855191820186528382529181018390529384018290529192905b85518160ff1610156102c45760015486516001600160a01b0390911690879060ff841690811061021257610212610933565b6020026020010151600001516001600160a01b0316141561025157858160ff168151811061024257610242610933565b602002602001015192506102b2565b60025486516001600160a01b0390911690879060ff841690811061027757610277610933565b6020026020010151600001516001600160a01b031614156102b257858160ff16815181106102a7576102a7610933565b602002602001015191505b806102bc816108e0565b9150506101e0565b506040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260035460408051630315a61160e31b815290516000926001600160a01b0316916318ad3088916004808301926020929190829003018186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b91906107a6565b90506000805b87518160ff1610156103ef5782888260ff16815181106103a3576103a3610933565b60200260200101516020015114156103dd57878160ff16815181106103ca576103ca610933565b60200260200101519350600191506103ef565b806103e7816108e0565b915050610381565b50806104815760405162461bcd60e51b815260206004820152605160248201527f4155736463324133437276416374696f6e4275696c6465723a2052657175697260448201527f656420616374696f6e206e6f7420696e20616374696f6e206c6973742c20636860648201527065636b2063616c63206f72646572696e6760781b608482015260a40160405180910390fd5b602085015160608401516001546001600160a01b03908116911614156104b75760808401516104b090826108a1565b90506104c9565b60808401516104c69082610860565b90505b6000806000806000851215610506576104e185610900565b60015460025460408d01519296506001600160a01b0391821695501692509050610527565b505060025460015460408901518594506001600160a01b0392831693509116905b6040805160e081018252600080546001600160a01b0390811683527fc1be4323348a37ae69ece55f3e69ca17827a2e81977d80591ce3d28155a4296a602084015295861692820192909252929093166060830152608082019390935291151560a083015260c08201529998505050505050505050565b600082601f8301126105ae57600080fd5b813560206105c36105be8361083c565b61080b565b8281528181019085830160e0808602880185018910156105e257600080fd5b6000805b878110156106795782848c0312156105fc578182fd5b6106046107bf565b843561060f8161095f565b81528488013588820152604061062681870161069d565b90820152606061063786820161069d565b908201526080858101359082015260a0610652818701610688565b9082015260c0610663868201610688565b90820152865294860194928201926001016105e6565b50929998505050505050505050565b8035801515811461069857600080fd5b919050565b80356106988161095f565b60008060408084860312156106bc57600080fd5b833567ffffffffffffffff808211156106d457600080fd5b818601915086601f8301126106e857600080fd5b813560206106f86105be8361083c565b828152818101908583016060808602880185018d101561071757600080fd5b600097505b858810156107755780828e03121561073357600080fd5b61073b6107e8565b82356107468161095f565b8152828601358682015261075b8a8401610688565b818b0152845260019790970196928401929081019061071c565b5090985050508701359350508083111561078e57600080fd5b505061079c8582860161059d565b9150509250929050565b6000602082840312156107b857600080fd5b5051919050565b60405160e0810167ffffffffffffffff811182821017156107e2576107e2610949565b60405290565b6040516060810167ffffffffffffffff811182821017156107e2576107e2610949565b604051601f8201601f1916810167ffffffffffffffff8111828210171561083457610834610949565b604052919050565b600067ffffffffffffffff82111561085657610856610949565b5060051b60200190565b600080821280156001600160ff1b03849003851316156108825761088261091d565b600160ff1b839003841281161561089b5761089b61091d565b50500190565b60008083128015600160ff1b8501841216156108bf576108bf61091d565b6001600160ff1b03840183138116156108da576108da61091d565b50500390565b600060ff821660ff8114156108f7576108f761091d565b60010192915050565b6000600160ff1b8214156109165761091661091d565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461097457600080fd5b5056fea26469706673582212204519c5f06932b01686bd2514a8e3d3477eb1a8184f496d7b0260620c72c204ee64736f6c634300080600335a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806318ad3088146100675780632d8647521461009a578063636f6159146100c55780637045352f146100d857806383909eeb14610150578063cc3d6cf714610163575b600080fd5b6040517fc1be4323348a37ae69ece55f3e69ca17827a2e81977d80591ce3d28155a4296a81526020015b60405180910390f35b6002546100ad906001600160a01b031681565b6040516001600160a01b039091168152602001610091565b6000546100ad906001600160a01b031681565b6100eb6100e63660046106a8565b610176565b604051610091919081516001600160a01b03908116825260208084015190830152604080840151821690830152606080840151909116908201526080808301519082015260a08281015115159082015260c09182015115159181019190915260e00190565b6003546100ad906001600160a01b031681565b6001546100ad906001600160a01b031681565b6040805160e0810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284518082018652838152808301849052808601849052855191820186528382529181018390529384018290529192905b85518160ff1610156102c45760015486516001600160a01b0390911690879060ff841690811061021257610212610933565b6020026020010151600001516001600160a01b0316141561025157858160ff168151811061024257610242610933565b602002602001015192506102b2565b60025486516001600160a01b0390911690879060ff841690811061027757610277610933565b6020026020010151600001516001600160a01b031614156102b257858160ff16815181106102a7576102a7610933565b602002602001015191505b806102bc816108e0565b9150506101e0565b506040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260035460408051630315a61160e31b815290516000926001600160a01b0316916318ad3088916004808301926020929190829003018186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b91906107a6565b90506000805b87518160ff1610156103ef5782888260ff16815181106103a3576103a3610933565b60200260200101516020015114156103dd57878160ff16815181106103ca576103ca610933565b60200260200101519350600191506103ef565b806103e7816108e0565b915050610381565b50806104815760405162461bcd60e51b815260206004820152605160248201527f4155736463324133437276416374696f6e4275696c6465723a2052657175697260448201527f656420616374696f6e206e6f7420696e20616374696f6e206c6973742c20636860648201527065636b2063616c63206f72646572696e6760781b608482015260a40160405180910390fd5b602085015160608401516001546001600160a01b03908116911614156104b75760808401516104b090826108a1565b90506104c9565b60808401516104c69082610860565b90505b6000806000806000851215610506576104e185610900565b60015460025460408d01519296506001600160a01b0391821695501692509050610527565b505060025460015460408901518594506001600160a01b0392831693509116905b6040805160e081018252600080546001600160a01b0390811683527fc1be4323348a37ae69ece55f3e69ca17827a2e81977d80591ce3d28155a4296a602084015295861692820192909252929093166060830152608082019390935291151560a083015260c08201529998505050505050505050565b600082601f8301126105ae57600080fd5b813560206105c36105be8361083c565b61080b565b8281528181019085830160e0808602880185018910156105e257600080fd5b6000805b878110156106795782848c0312156105fc578182fd5b6106046107bf565b843561060f8161095f565b81528488013588820152604061062681870161069d565b90820152606061063786820161069d565b908201526080858101359082015260a0610652818701610688565b9082015260c0610663868201610688565b90820152865294860194928201926001016105e6565b50929998505050505050505050565b8035801515811461069857600080fd5b919050565b80356106988161095f565b60008060408084860312156106bc57600080fd5b833567ffffffffffffffff808211156106d457600080fd5b818601915086601f8301126106e857600080fd5b813560206106f86105be8361083c565b828152818101908583016060808602880185018d101561071757600080fd5b600097505b858810156107755780828e03121561073357600080fd5b61073b6107e8565b82356107468161095f565b8152828601358682015261075b8a8401610688565b818b0152845260019790970196928401929081019061071c565b5090985050508701359350508083111561078e57600080fd5b505061079c8582860161059d565b9150509250929050565b6000602082840312156107b857600080fd5b5051919050565b60405160e0810167ffffffffffffffff811182821017156107e2576107e2610949565b60405290565b6040516060810167ffffffffffffffff811182821017156107e2576107e2610949565b604051601f8201601f1916810167ffffffffffffffff8111828210171561083457610834610949565b604052919050565b600067ffffffffffffffff82111561085657610856610949565b5060051b60200190565b600080821280156001600160ff1b03849003851316156108825761088261091d565b600160ff1b839003841281161561089b5761089b61091d565b50500190565b60008083128015600160ff1b8501841216156108bf576108bf61091d565b6001600160ff1b03840183138116156108da576108da61091d565b50500390565b600060ff821660ff8114156108f7576108f761091d565b60010192915050565b6000600160ff1b8214156109165761091661091d565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461097457600080fd5b5056fea26469706673582212204519c5f06932b01686bd2514a8e3d3477eb1a8184f496d7b0260620c72c204ee64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11768,
        "contract": "contracts/action_builders/AUsdc2A3CrvActionBuilder.sol:AUsdc2A3CrvActionBuilder",
        "label": "tokenExchange",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ITokenExchange)15996"
      },
      {
        "astId": 11771,
        "contract": "contracts/action_builders/AUsdc2A3CrvActionBuilder.sol:AUsdc2A3CrvActionBuilder",
        "label": "aUsdcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)4667"
      },
      {
        "astId": 11774,
        "contract": "contracts/action_builders/AUsdc2A3CrvActionBuilder.sol:AUsdc2A3CrvActionBuilder",
        "label": "a3CrvToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)4667"
      },
      {
        "astId": 11777,
        "contract": "contracts/action_builders/AUsdc2A3CrvActionBuilder.sol:AUsdc2A3CrvActionBuilder",
        "label": "usdc2AUsdcActionBuilder",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IActionBuilder)15802"
      }
    ],
    "types": {
      "t_contract(IActionBuilder)15802": {
        "encoding": "inplace",
        "label": "contract IActionBuilder",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)4667": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ITokenExchange)15996": {
        "encoding": "inplace",
        "label": "contract ITokenExchange",
        "numberOfBytes": "20"
      }
    }
  }
}