{
  "address": "0x3110470B36Ac36aF0fE84ace423ED64d1417e624",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenExchange",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aUsdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc2IdleUsdcActionBuilder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "aUsdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "diffToTarget",
              "type": "int256"
            },
            {
              "internalType": "bool",
              "name": "targetIsZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IMark2Market.BalanceAssetPrices[]",
          "name": "assetPrices",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "contract ITokenExchange",
              "name": "tokenExchange",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "code",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exchangeAll",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ],
          "internalType": "struct IActionBuilder.ExchangeAction[]",
          "name": "actions",
          "type": "tuple[]"
        }
      ],
      "name": "buildAction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ITokenExchange",
              "name": "tokenExchange",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "code",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exchangeAll",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            }
          ],
          "internalType": "struct IActionBuilder.ExchangeAction",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActionCode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenExchange",
      "outputs": [
        {
          "internalType": "contract ITokenExchange",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc2IdleUsdcActionBuilder",
      "outputs": [
        {
          "internalType": "contract IActionBuilder",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6f660d6c28957188cc5eddee977214c8882f41363da9b54866eeadad2f565fbd",
  "receipt": {
    "to": null,
    "from": "0x5CB01385d3097b6a189d1ac8BA3364D900666445",
    "contractAddress": "0x3110470B36Ac36aF0fE84ace423ED64d1417e624",
    "transactionIndex": 11,
    "gasUsed": "689682",
    "logsBloom": "0x
    "blockHash": "0xb7c7955340a584478c7088922afda5346977166f13ad6d6f4dbc1475d0aeae17",
    "transactionHash": "0x6f660d6c28957188cc5eddee977214c8882f41363da9b54866eeadad2f565fbd",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 22911098,
        "transactionHash": "0x6f660d6c28957188cc5eddee977214c8882f41363da9b54866eeadad2f565fbd",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005cb01385d3097b6a189d1ac8ba3364d900666445",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000ab8459474238000000000000000000000000000000000000000000000000009c92e2d2ebe48ee8000000000000000000000000000000000000000000005bacfed11bb6812941690000000000000000000000000000000000000000000000009be75e79a4a256e8000000000000000000000000000000000000000000005bacff7ca00fc86b7969",
        "logIndex": 44,
        "blockHash": "0xb7c7955340a584478c7088922afda5346977166f13ad6d6f4dbc1475d0aeae17"
      }
    ],
    "blockNumber": 22911098,
    "cumulativeGasUsed": "1964722",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF0B45cb983dA8fBe414A46790630A16f55198189",
    "0x2791bca1f2de4661ed88a30c99a7a9449aa84174",
    "0x1a13F4Ca1d028320A707D99520AbFefca3998b7F",
    "0xe4A6873313D954a29A5949fe2Bba8710F56575Fa"
  ],
  "solcInputHash": "a52a09ed2b2706cd99c66d36846223b4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenExchange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aUsdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc2IdleUsdcActionBuilder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"aUsdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"diffToTarget\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"targetIsZero\",\"type\":\"bool\"}],\"internalType\":\"struct IMark2Market.BalanceAssetPrices[]\",\"name\":\"assetPrices\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"contract ITokenExchange\",\"name\":\"tokenExchange\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exchangeAll\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"internalType\":\"struct IActionBuilder.ExchangeAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"name\":\"buildAction\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ITokenExchange\",\"name\":\"tokenExchange\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"code\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exchangeAll\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"internalType\":\"struct IActionBuilder.ExchangeAction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActionCode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenExchange\",\"outputs\":[{\"internalType\":\"contract ITokenExchange\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc2IdleUsdcActionBuilder\",\"outputs\":[{\"internalType\":\"contract IActionBuilder\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/action_builders/Usdc2AUsdcActionBuilder.sol\":\"Usdc2AUsdcActionBuilder\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"contracts/action_builders/Usdc2AUsdcActionBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/ITokenExchange.sol\\\";\\nimport \\\"../interfaces/IActionBuilder.sol\\\";\\nimport \\\"../interfaces/IMark2Market.sol\\\";\\n\\ncontract Usdc2AUsdcActionBuilder is IActionBuilder {\\n    bytes32 constant ACTION_CODE = keccak256(\\\"Usc2AUsdc\\\");\\n\\n    ITokenExchange public tokenExchange;\\n    IERC20 public usdcToken;\\n    IERC20 public aUsdcToken;\\n    IActionBuilder public usdc2IdleUsdcActionBuilder;\\n\\n    constructor(\\n        address _tokenExchange,\\n        address _usdcToken,\\n        address _aUsdcToken,\\n        address _usdc2IdleUsdcActionBuilder\\n    ) {\\n        require(_tokenExchange != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_aUsdcToken != address(0), \\\"Zero address not allowed\\\");\\n        require(_usdc2IdleUsdcActionBuilder != address(0), \\\"Zero address not allowed\\\");\\n\\n        tokenExchange = ITokenExchange(_tokenExchange);\\n        usdcToken = IERC20(_usdcToken);\\n        aUsdcToken = IERC20(_aUsdcToken);\\n        usdc2IdleUsdcActionBuilder = IActionBuilder(_usdc2IdleUsdcActionBuilder);\\n    }\\n\\n    function getActionCode() external pure override returns (bytes32) {\\n        return ACTION_CODE;\\n    }\\n\\n    function buildAction(\\n        IMark2Market.BalanceAssetPrices[] memory assetPrices,\\n        ExchangeAction[] memory actions\\n    ) external view override returns (ExchangeAction memory) {\\n        // get diff from iteration over prices because can't use mapping in memory params to external functions\\n        IMark2Market.BalanceAssetPrices memory usdcPrices;\\n        IMark2Market.BalanceAssetPrices memory aUsdcPrices;\\n        for (uint8 i = 0; i < assetPrices.length; i++) {\\n            if (assetPrices[i].asset == address(usdcToken)) {\\n                usdcPrices = assetPrices[i];\\n                continue;\\n            }\\n            if (assetPrices[i].asset == address(aUsdcToken)) {\\n                aUsdcPrices = assetPrices[i];\\n                continue;\\n            }\\n        }\\n\\n        // get diffUsdc2IdleUsdc to correct current diff\\n        ExchangeAction memory usdc2IdleUsdcAction;\\n        bytes32 usdc2IdleUsdcActionCode = usdc2IdleUsdcActionBuilder.getActionCode();\\n        bool foundDependencyAction = false;\\n        for (uint8 i = 0; i < actions.length; i++) {\\n            // here we need USDC diff to make action right\\n            if (actions[i].code == usdc2IdleUsdcActionCode) {\\n                usdc2IdleUsdcAction = actions[i];\\n                foundDependencyAction = true;\\n                break;\\n            }\\n        }\\n        require(foundDependencyAction, \\\"Usdc2AUsdcActionBuilder: Required action not in action list, check calc ordering\\\");\\n\\n        // use usdc diff to start calc diff\\n        int256 diff = usdcPrices.diffToTarget;\\n\\n        // correct diff value by usdc2AUsdc diff\\n        if (address(usdcToken) == address(usdc2IdleUsdcAction.to)) {\\n            // if in action move usdc->usdcIdle then we should decrease diff (sub)\\n            diff = diff - int256(usdc2IdleUsdcAction.amount);\\n        } else {\\n            // if in action move usdcIdle->usdc then we should increase diff (add)\\n            diff = diff + int256(usdc2IdleUsdcAction.amount);\\n        }\\n\\n        uint256 amount;\\n        IERC20 from;\\n        IERC20 to;\\n        bool targetIsZero;\\n        if (usdcPrices.targetIsZero || diff < 0) {\\n            amount = uint256(- diff);\\n            from = usdcToken;\\n            to = aUsdcToken;\\n            targetIsZero = usdcPrices.targetIsZero;\\n        } else {\\n            amount = uint256(diff);\\n            from = aUsdcToken;\\n            to = usdcToken;\\n            targetIsZero = aUsdcPrices.targetIsZero;\\n        }\\n\\n        ExchangeAction memory action = ExchangeAction(\\n            tokenExchange,\\n            ACTION_CODE,\\n            from,\\n            to,\\n            amount,\\n            targetIsZero,\\n            false\\n        );\\n\\n        return action;\\n    }\\n}\\n\",\"keccak256\":\"0xa83d3ae2eeeccb898a7ff6e844ca46c5a37e3384e9765d010b10e8a34c36c3c4\",\"license\":\"MIT\"},\"contracts/interfaces/IActionBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IMark2Market.sol\\\";\\nimport \\\"./ITokenExchange.sol\\\";\\n\\ninterface IActionBuilder {\\n    struct ExchangeAction {\\n        ITokenExchange tokenExchange;\\n        bytes32 code;\\n        IERC20 from;\\n        IERC20 to;\\n        uint256 amount; // amount at usdc with 6 digit fractions\\n        bool exchangeAll; // mean that we should trade all tokens to zero ownership\\n        bool executed;\\n    }\\n\\n    function getActionCode() external pure returns (bytes32);\\n\\n    function buildAction(\\n        IMark2Market.BalanceAssetPrices[] memory assetPrices,\\n        ExchangeAction[] memory actions\\n    ) external view returns (ExchangeAction memory);\\n}\\n\",\"keccak256\":\"0x86dc01c83d7f8c96b8c1d62ebb80e684a76c8e92a100cb8b5b469b166caea8ca\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IMark2Market.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.8.0 <0.9.0;\\n\\ninterface IMark2Market {\\n    struct AssetPrices {\\n        address asset;\\n        uint256 amountInVault; // balance on Vault\\n        uint256 usdcPriceInVault; // current total price of balance at USDC\\n        //\\n        uint256 usdcPriceDenominator;\\n        uint256 usdcSellPrice;\\n        uint256 usdcBuyPrice;\\n        //\\n        uint256 decimals;\\n        string name;\\n        string symbol;\\n    }\\n\\n    struct TotalAssetPrices {\\n        AssetPrices[] assetPrices;\\n        uint256 totalUsdcPrice;\\n    }\\n\\n    struct BalanceAssetPrices {\\n        address asset;\\n        int256 diffToTarget; // diff usdcPriceInVault to target in portfolio\\n        bool targetIsZero; // mean that we should trade all tokens to zero ownership\\n    }\\n\\n    function assetPrices() external view returns (TotalAssetPrices memory);\\n\\n    function totalUsdcPrice() external view returns (uint256);\\n\\n    function assetPricesForBalance() external view returns (BalanceAssetPrices[] memory);\\n\\n    function assetPricesForBalance(address withdrawToken, uint256 withdrawAmount) external view returns (BalanceAssetPrices[] memory);\\n}\\n\",\"keccak256\":\"0x4bb763b2c3623fc2857547a5970e09789fc193590a005b6693d3df9545d9e69a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ITokenExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ITokenExchange {\\n\\n    function exchange(\\n        address spender,\\n        IERC20 from,\\n        address receiver,\\n        IERC20 to,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0x5b882bdf0c53f3ad4e7a281ad884af921b2c7ff16517bf56e50f253fc58b5bbc\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000bf538038062000bf5833981016040819052610031916101b9565b6001600160a01b03841661007b5760405162461bcd60e51b8152602060048201526018602482015260008051602062000bd583398151915260448201526064015b60405180910390fd5b6001600160a01b0383166100c05760405162461bcd60e51b8152602060048201526018602482015260008051602062000bd58339815191526044820152606401610072565b6001600160a01b0382166101055760405162461bcd60e51b8152602060048201526018602482015260008051602062000bd58339815191526044820152606401610072565b6001600160a01b03811661014a5760405162461bcd60e51b8152602060048201526018602482015260008051602062000bd58339815191526044820152606401610072565b600080546001600160a01b039586166001600160a01b031991821617909155600180549486169482169490941790935560028054928516928416929092179091556003805491909316911617905561020d565b80516001600160a01b03811681146101b457600080fd5b919050565b600080600080608085870312156101cf57600080fd5b6101d88561019d565b93506101e66020860161019d565b92506101f46040860161019d565b91506102026060860161019d565b905092959194509250565b6109b8806200021d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806311eac8551461006757806318ad308814610097578063636f6159146100c55780637045352f146100d85780638ae7a6bc14610150578063cc3d6cf714610163575b600080fd5b60015461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6040517f18e1fe542fd5388446d8e29a18e6c174071607d3b7ac1d55ef29aa7dcda20f8f815260200161008e565b60005461007a906001600160a01b031681565b6100eb6100e63660046106b3565b610176565b60405161008e919081516001600160a01b03908116825260208084015190830152604080840151821690830152606080840151909116908201526080808301519082015260a08281015115159082015260c09182015115159181019190915260e00190565b60035461007a906001600160a01b031681565b60025461007a906001600160a01b031681565b6040805160e0810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284518082018652838152808301849052808601849052855191820186528382529181018390529384018290529192905b85518160ff1610156102c45760015486516001600160a01b0390911690879060ff84169081106102125761021261093e565b6020026020010151600001516001600160a01b0316141561025157858160ff16815181106102425761024261093e565b602002602001015192506102b2565b60025486516001600160a01b0390911690879060ff84169081106102775761027761093e565b6020026020010151600001516001600160a01b031614156102b257858160ff16815181106102a7576102a761093e565b602002602001015191505b806102bc816108eb565b9150506101e0565b506040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260035460408051630315a61160e31b815290516000926001600160a01b0316916318ad3088916004808301926020929190829003018186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b91906107b1565b90506000805b87518160ff1610156103ef5782888260ff16815181106103a3576103a361093e565b60200260200101516020015114156103dd57878160ff16815181106103ca576103ca61093e565b60200260200101519350600191506103ef565b806103e7816108eb565b915050610381565b50806104805760405162461bcd60e51b815260206004820152605060248201527f55736463324155736463416374696f6e4275696c6465723a205265717569726560448201527f6420616374696f6e206e6f7420696e20616374696f6e206c6973742c2063686560648201526f636b2063616c63206f72646572696e6760801b608482015260a40160405180910390fd5b602085015160608401516001546001600160a01b03908116911614156104b65760808401516104af90826108ac565b90506104c8565b60808401516104c5908261086b565b90505b6000806000808960400151806104de5750600085125b15610511576104ec8561090b565b60015460025460408d01519296506001600160a01b0391821695501692509050610532565b505060025460015460408901518594506001600160a01b0392831693509116905b6040805160e081018252600080546001600160a01b0390811683527f18e1fe542fd5388446d8e29a18e6c174071607d3b7ac1d55ef29aa7dcda20f8f602084015295861692820192909252929093166060830152608082019390935291151560a083015260c08201529998505050505050505050565b600082601f8301126105b957600080fd5b813560206105ce6105c983610847565b610816565b8281528181019085830160e0808602880185018910156105ed57600080fd5b6000805b878110156106845782848c031215610607578182fd5b61060f6107ca565b843561061a8161096a565b8152848801358882015260406106318187016106a8565b9082015260606106428682016106a8565b908201526080858101359082015260a061065d818701610693565b9082015260c061066e868201610693565b90820152865294860194928201926001016105f1565b50929998505050505050505050565b803580151581146106a357600080fd5b919050565b80356106a38161096a565b60008060408084860312156106c757600080fd5b833567ffffffffffffffff808211156106df57600080fd5b818601915086601f8301126106f357600080fd5b813560206107036105c983610847565b828152818101908583016060808602880185018d101561072257600080fd5b600097505b858810156107805780828e03121561073e57600080fd5b6107466107f3565b82356107518161096a565b815282860135868201526107668a8401610693565b818b01528452600197909701969284019290810190610727565b5090985050508701359350508083111561079957600080fd5b50506107a7858286016105a8565b9150509250929050565b6000602082840312156107c357600080fd5b5051919050565b60405160e0810167ffffffffffffffff811182821017156107ed576107ed610954565b60405290565b6040516060810167ffffffffffffffff811182821017156107ed576107ed610954565b604051601f8201601f1916810167ffffffffffffffff8111828210171561083f5761083f610954565b604052919050565b600067ffffffffffffffff82111561086157610861610954565b5060051b60200190565b600080821280156001600160ff1b038490038513161561088d5761088d610928565b600160ff1b83900384128116156108a6576108a6610928565b50500190565b60008083128015600160ff1b8501841216156108ca576108ca610928565b6001600160ff1b03840183138116156108e5576108e5610928565b50500390565b600060ff821660ff81141561090257610902610928565b60010192915050565b6000600160ff1b82141561092157610921610928565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461097f57600080fd5b5056fea2646970667358221220ded3523e70f74cee5d0e35abeb2aa2097f6d9dfd541e09edba6094873afce5b864736f6c634300080600335a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806311eac8551461006757806318ad308814610097578063636f6159146100c55780637045352f146100d85780638ae7a6bc14610150578063cc3d6cf714610163575b600080fd5b60015461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6040517f18e1fe542fd5388446d8e29a18e6c174071607d3b7ac1d55ef29aa7dcda20f8f815260200161008e565b60005461007a906001600160a01b031681565b6100eb6100e63660046106b3565b610176565b60405161008e919081516001600160a01b03908116825260208084015190830152604080840151821690830152606080840151909116908201526080808301519082015260a08281015115159082015260c09182015115159181019190915260e00190565b60035461007a906001600160a01b031681565b60025461007a906001600160a01b031681565b6040805160e0810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905284518082018652838152808301849052808601849052855191820186528382529181018390529384018290529192905b85518160ff1610156102c45760015486516001600160a01b0390911690879060ff84169081106102125761021261093e565b6020026020010151600001516001600160a01b0316141561025157858160ff16815181106102425761024261093e565b602002602001015192506102b2565b60025486516001600160a01b0390911690879060ff84169081106102775761027761093e565b6020026020010151600001516001600160a01b031614156102b257858160ff16815181106102a7576102a761093e565b602002602001015191505b806102bc816108eb565b9150506101e0565b506040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260035460408051630315a61160e31b815290516000926001600160a01b0316916318ad3088916004808301926020929190829003018186803b15801561034357600080fd5b505afa158015610357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037b91906107b1565b90506000805b87518160ff1610156103ef5782888260ff16815181106103a3576103a361093e565b60200260200101516020015114156103dd57878160ff16815181106103ca576103ca61093e565b60200260200101519350600191506103ef565b806103e7816108eb565b915050610381565b50806104805760405162461bcd60e51b815260206004820152605060248201527f55736463324155736463416374696f6e4275696c6465723a205265717569726560448201527f6420616374696f6e206e6f7420696e20616374696f6e206c6973742c2063686560648201526f636b2063616c63206f72646572696e6760801b608482015260a40160405180910390fd5b602085015160608401516001546001600160a01b03908116911614156104b65760808401516104af90826108ac565b90506104c8565b60808401516104c5908261086b565b90505b6000806000808960400151806104de5750600085125b15610511576104ec8561090b565b60015460025460408d01519296506001600160a01b0391821695501692509050610532565b505060025460015460408901518594506001600160a01b0392831693509116905b6040805160e081018252600080546001600160a01b0390811683527f18e1fe542fd5388446d8e29a18e6c174071607d3b7ac1d55ef29aa7dcda20f8f602084015295861692820192909252929093166060830152608082019390935291151560a083015260c08201529998505050505050505050565b600082601f8301126105b957600080fd5b813560206105ce6105c983610847565b610816565b8281528181019085830160e0808602880185018910156105ed57600080fd5b6000805b878110156106845782848c031215610607578182fd5b61060f6107ca565b843561061a8161096a565b8152848801358882015260406106318187016106a8565b9082015260606106428682016106a8565b908201526080858101359082015260a061065d818701610693565b9082015260c061066e868201610693565b90820152865294860194928201926001016105f1565b50929998505050505050505050565b803580151581146106a357600080fd5b919050565b80356106a38161096a565b60008060408084860312156106c757600080fd5b833567ffffffffffffffff808211156106df57600080fd5b818601915086601f8301126106f357600080fd5b813560206107036105c983610847565b828152818101908583016060808602880185018d101561072257600080fd5b600097505b858810156107805780828e03121561073e57600080fd5b6107466107f3565b82356107518161096a565b815282860135868201526107668a8401610693565b818b01528452600197909701969284019290810190610727565b5090985050508701359350508083111561079957600080fd5b50506107a7858286016105a8565b9150509250929050565b6000602082840312156107c357600080fd5b5051919050565b60405160e0810167ffffffffffffffff811182821017156107ed576107ed610954565b60405290565b6040516060810167ffffffffffffffff811182821017156107ed576107ed610954565b604051601f8201601f1916810167ffffffffffffffff8111828210171561083f5761083f610954565b604052919050565b600067ffffffffffffffff82111561086157610861610954565b5060051b60200190565b600080821280156001600160ff1b038490038513161561088d5761088d610928565b600160ff1b83900384128116156108a6576108a6610928565b50500190565b60008083128015600160ff1b8501841216156108ca576108ca610928565b6001600160ff1b03840183138116156108e5576108e5610928565b50500390565b600060ff821660ff81141561090257610902610928565b60010192915050565b6000600160ff1b82141561092157610921610928565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461097f57600080fd5b5056fea2646970667358221220ded3523e70f74cee5d0e35abeb2aa2097f6d9dfd541e09edba6094873afce5b864736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12372,
        "contract": "contracts/action_builders/Usdc2AUsdcActionBuilder.sol:Usdc2AUsdcActionBuilder",
        "label": "tokenExchange",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ITokenExchange)15996"
      },
      {
        "astId": 12375,
        "contract": "contracts/action_builders/Usdc2AUsdcActionBuilder.sol:Usdc2AUsdcActionBuilder",
        "label": "usdcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)4667"
      },
      {
        "astId": 12378,
        "contract": "contracts/action_builders/Usdc2AUsdcActionBuilder.sol:Usdc2AUsdcActionBuilder",
        "label": "aUsdcToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)4667"
      },
      {
        "astId": 12381,
        "contract": "contracts/action_builders/Usdc2AUsdcActionBuilder.sol:Usdc2AUsdcActionBuilder",
        "label": "usdc2IdleUsdcActionBuilder",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IActionBuilder)15802"
      }
    ],
    "types": {
      "t_contract(IActionBuilder)15802": {
        "encoding": "inplace",
        "label": "contract IActionBuilder",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)4667": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ITokenExchange)15996": {
        "encoding": "inplace",
        "label": "contract ITokenExchange",
        "numberOfBytes": "20"
      }
    }
  }
}