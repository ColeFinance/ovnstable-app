{
  "contractName": "A3Crv2A3CrvGaugeTokenExchange",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_curveGauge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "a3CrvGaugeToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "a3CrvToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardGauge",
      "outputs": [
        {
          "internalType": "contract IRewardOnlyGauge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_curveGauge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"a3CrvGaugeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a3CrvToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardGauge\",\"outputs\":[{\"internalType\":\"contract IRewardOnlyGauge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol\":\"A3Crv2A3CrvGaugeTokenExchange\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"project:/contracts/connectors/curve/interfaces/IRewardOnlyGauge.sol\":{\"keccak256\":\"0xf618b31cf5c572417841ad8b1e006fe428de24cc7089350721d690a773525582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://724c1e56ded20909c08848551784df9ca9573fd3aebf55d76a3169f9cd993d74\",\"dweb:/ipfs/Qme4J5CjxzF4jMPwS5PDtf7Ej8fny3w2nxvstJtoATzn2Y\"]},\"project:/contracts/interfaces/ITokenExchange.sol\":{\"keccak256\":\"0x8ec0b820a093abc3423378da1d9e17da6681bb0e31b0e38f7e0f1f613e5bf7ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f86f0712a4f607c60b90cfba10cd98281ef74930d7716313dd10de2a651a6b16\",\"dweb:/ipfs/QmNdxchJPVjoadVzQk6tJ2QCw3aceQvYBjf3guBgyVemee\"]},\"project:/contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol\":{\"keccak256\":\"0xdd6e8609cf0dc9af3d3a8781c7b5702fddb04da14702107dd1e1bec7b5a2cb59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d08f79e4540e7e178b7622de73f5f49983e6307e78f5f4290c7fa65902b63567\",\"dweb:/ipfs/QmeCbWX92KZbsypjRcDPo9KiM3rMNpS4L2AEzkzhFAXZ8K\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001aa838038062001aa883398181016040528101906200003791906200022d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a19062000286565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200015357600080fd5b505af115801562000168573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018e91906200022d565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000335565b60008151905062000227816200031b565b92915050565b600060208284031215620002465762000245620002ed565b5b6000620002568482850162000216565b91505092915050565b60006200026e601883620002a8565b91506200027b82620002f2565b602082019050919050565b60006020820190508181036000830152620002a1816200025f565b9050919050565b600082825260208201905092915050565b6000620002c682620002cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f5a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000600082015250565b6200032681620002b9565b81146200033257600080fd5b50565b61176380620003456000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d8647521461005157806334c0d4421461006f57806362ac75381461008d57806386d551c7146100a9575b600080fd5b6100596100c7565b604051610066919061113c565b60405180910390f35b6100776100ed565b6040516100849190611157565b60405180910390f35b6100a760048036038101906100a29190610f1f565b610111565b005b6100b1610e7b565b6040516100be919061113c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156101bb5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061026c5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561026b5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b6102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a290611192565b60405180910390fd5b60008114156103cf578373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb868673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030a91906110f8565b60206040518083038186803b15801561032257600080fd5b505afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610fc7565b6040518363ffffffff1660e01b8152600401610377929190611113565b602060405180830381600087803b15801561039157600080fd5b505af11580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610f9a565b50610e74565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156104795750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156108c0576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e857600080fd5b505afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610ff4565b601261052c9190611405565b600a61053891906112e7565b905080826105469190611263565b915081600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105a491906110f8565b60206040518083038186803b1580156105bc57600080fd5b505afa1580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190610fc7565b1015610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c906111d2565b60405180910390fd5b600082141561075a578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb878773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161069491906110f8565b60206040518083038186803b1580156106ac57600080fd5b505afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e49190610fc7565b6040518363ffffffff1660e01b8152600401610701929190611113565b602060405180830381600087803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190610f9a565b5050610e74565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016107d7929190611113565b602060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108299190610f9a565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383df6747838660006040518463ffffffff1660e01b8152600401610888939291906111f2565b600060405180830381600087803b1580156108a257600080fd5b505af11580156108b6573d6000803e3d6000fd5b5050505050610e73565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561092a57600080fd5b505afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190610ff4565b601261096e9190611405565b600a61097a91906112e7565b905080826109889190611263565b915081600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109e691906110f8565b60206040518083038186803b1580156109fe57600080fd5b505afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190610fc7565b1015610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90611172565b60405180910390fd5b6000821415610b9c578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb878773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ad691906110f8565b60206040518083038186803b158015610aee57600080fd5b505afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190610fc7565b6040518363ffffffff1660e01b8152600401610b43929190611113565b602060405180830381600087803b158015610b5d57600080fd5b505af1158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b959190610f9a565b5050610e74565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338d074368360006040518363ffffffff1660e01b8152600401610bf8929190611229565b600060405180830381600087803b158015610c1257600080fd5b505af1158015610c26573d6000803e3d6000fd5b5050505081600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c8691906110f8565b60206040518083038186803b158015610c9e57600080fd5b505afa158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd69190610fc7565b1015610d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0e906111b2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610db191906110f8565b60206040518083038186803b158015610dc957600080fd5b505afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e019190610fc7565b6040518363ffffffff1660e01b8152600401610e1e929190611113565b602060405180830381600087803b158015610e3857600080fd5b505af1158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190610f9a565b50505b5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610eb0816116ba565b92915050565b600081519050610ec5816116d1565b92915050565b600081359050610eda816116e8565b92915050565b600081359050610eef816116ff565b92915050565b600081519050610f04816116ff565b92915050565b600081519050610f1981611716565b92915050565b600080600080600060a08688031215610f3b57610f3a611546565b5b6000610f4988828901610ea1565b9550506020610f5a88828901610ecb565b9450506040610f6b88828901610ea1565b9350506060610f7c88828901610ecb565b9250506080610f8d88828901610ee0565b9150509295509295909350565b600060208284031215610fb057610faf611546565b5b6000610fbe84828501610eb6565b91505092915050565b600060208284031215610fdd57610fdc611546565b5b6000610feb84828501610ef5565b91505092915050565b60006020828403121561100a57611009611546565b5b600061101884828501610f0a565b91505092915050565b61102a81611439565b82525050565b6110398161144b565b82525050565b611048816114a0565b82525050565b611057816114c4565b82525050565b600061106a603983611252565b915061107582611558565b604082019050919050565b600061108d603883611252565b9150611098826115a7565b604082019050919050565b60006110b0604383611252565b91506110bb826115f6565b606082019050919050565b60006110d3603483611252565b91506110de8261166b565b604082019050919050565b6110f281611489565b82525050565b600060208201905061110d6000830184611021565b92915050565b60006040820190506111286000830185611021565b61113560208301846110e9565b9392505050565b6000602082019050611151600083018461103f565b92915050565b600060208201905061116c600083018461104e565b92915050565b6000602082019050818103600083015261118b8161105d565b9050919050565b600060208201905081810360008301526111ab81611080565b9050919050565b600060208201905081810360008301526111cb816110a3565b9050919050565b600060208201905081810360008301526111eb816110c6565b9050919050565b600060608201905061120760008301866110e9565b6112146020830185611021565b6112216040830184611030565b949350505050565b600060408201905061123e60008301856110e9565b61124b6020830184611030565b9392505050565b600082825260208201905092915050565b600061126e82611489565b915061127983611489565b92508261128957611288611517565b5b828204905092915050565b6000808291508390505b60018511156112de578086048111156112ba576112b96114e8565b5b60018516156112c95780820291505b80810290506112d78561154b565b945061129e565b94509492505050565b60006112f282611489565b91506112fd83611493565b925061132a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611332565b905092915050565b60008261134257600190506113fe565b8161135057600090506113fe565b816001811461136657600281146113705761139f565b60019150506113fe565b60ff841115611382576113816114e8565b5b8360020a915084821115611399576113986114e8565b5b506113fe565b5060208310610133831016604e8410600b84101617156113d45782820a9050838111156113cf576113ce6114e8565b5b6113fe565b6113e18484846001611294565b925090508184048111156113f8576113f76114e8565b5b81810290505b9392505050565b600061141082611493565b915061141b83611493565b92508282101561142e5761142d6114e8565b5b828203905092915050565b600061144482611469565b9050919050565b60008115159050919050565b600061146282611439565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114ab826114b2565b9050919050565b60006114bd82611469565b9050919050565b60006114cf826114d6565b9050919050565b60006114e182611469565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f41334372763241334372764761756765546f6b656e45786368616e67653a204e60008201527f6f7420656e6f7567682061334372764761756765546f6b656e00000000000000602082015250565b7f41334372763241334372764761756765546f6b656e45786368616e67653a205360008201527f6f6d6520746f6b656e206e6f7420636f6d70617469626c650000000000000000602082015250565b7f41334372763241334372764761756765546f6b656e45786368616e67653a204e60008201527f6f7420656e6f756768206133437276546f6b656e20616674657220776974686460208201527f7261770000000000000000000000000000000000000000000000000000000000604082015250565b7f41334372763241334372764761756765546f6b656e45786368616e67653a204e60008201527f6f7420656e6f756768206133437276546f6b656e000000000000000000000000602082015250565b6116c381611439565b81146116ce57600080fd5b50565b6116da8161144b565b81146116e557600080fd5b50565b6116f181611457565b81146116fc57600080fd5b50565b61170881611489565b811461171357600080fd5b50565b61171f81611493565b811461172a57600080fd5b5056fea2646970667358221220487fa4255e7643c3e0ab89ae3bba8d658f6f67b1cc5a73de296fce8a51e5843b64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d8647521461005157806334c0d4421461006f57806362ac75381461008d57806386d551c7146100a9575b600080fd5b6100596100c7565b604051610066919061113c565b60405180910390f35b6100776100ed565b6040516100849190611157565b60405180910390f35b6100a760048036038101906100a29190610f1f565b610111565b005b6100b1610e7b565b6040516100be919061113c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156101bb5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061026c5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561026b5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b5b6102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a290611192565b60405180910390fd5b60008114156103cf578373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb868673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161030a91906110f8565b60206040518083038186803b15801561032257600080fd5b505afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610fc7565b6040518363ffffffff1660e01b8152600401610377929190611113565b602060405180830381600087803b15801561039157600080fd5b505af11580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610f9a565b50610e74565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480156104795750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156108c0576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e857600080fd5b505afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105209190610ff4565b601261052c9190611405565b600a61053891906112e7565b905080826105469190611263565b915081600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105a491906110f8565b60206040518083038186803b1580156105bc57600080fd5b505afa1580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190610fc7565b1015610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c906111d2565b60405180910390fd5b600082141561075a578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb878773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161069491906110f8565b60206040518083038186803b1580156106ac57600080fd5b505afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e49190610fc7565b6040518363ffffffff1660e01b8152600401610701929190611113565b602060405180830381600087803b15801561071b57600080fd5b505af115801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190610f9a565b5050610e74565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016107d7929190611113565b602060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108299190610f9a565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383df6747838660006040518463ffffffff1660e01b8152600401610888939291906111f2565b600060405180830381600087803b1580156108a257600080fd5b505af11580156108b6573d6000803e3d6000fd5b5050505050610e73565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561092a57600080fd5b505afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190610ff4565b601261096e9190611405565b600a61097a91906112e7565b905080826109889190611263565b915081600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109e691906110f8565b60206040518083038186803b1580156109fe57600080fd5b505afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190610fc7565b1015610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e90611172565b60405180910390fd5b6000821415610b9c578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb878773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ad691906110f8565b60206040518083038186803b158015610aee57600080fd5b505afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190610fc7565b6040518363ffffffff1660e01b8152600401610b43929190611113565b602060405180830381600087803b158015610b5d57600080fd5b505af1158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b959190610f9a565b5050610e74565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338d074368360006040518363ffffffff1660e01b8152600401610bf8929190611229565b600060405180830381600087803b158015610c1257600080fd5b505af1158015610c26573d6000803e3d6000fd5b5050505081600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c8691906110f8565b60206040518083038186803b158015610c9e57600080fd5b505afa158015610cb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd69190610fc7565b1015610d17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0e906111b2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610db191906110f8565b60206040518083038186803b158015610dc957600080fd5b505afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e019190610fc7565b6040518363ffffffff1660e01b8152600401610e1e929190611113565b602060405180830381600087803b158015610e3857600080fd5b505af1158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190610f9a565b50505b5b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050610eb0816116ba565b92915050565b600081519050610ec5816116d1565b92915050565b600081359050610eda816116e8565b92915050565b600081359050610eef816116ff565b92915050565b600081519050610f04816116ff565b92915050565b600081519050610f1981611716565b92915050565b600080600080600060a08688031215610f3b57610f3a611546565b5b6000610f4988828901610ea1565b9550506020610f5a88828901610ecb565b9450506040610f6b88828901610ea1565b9350506060610f7c88828901610ecb565b9250506080610f8d88828901610ee0565b9150509295509295909350565b600060208284031215610fb057610faf611546565b5b6000610fbe84828501610eb6565b91505092915050565b600060208284031215610fdd57610fdc611546565b5b6000610feb84828501610ef5565b91505092915050565b60006020828403121561100a57611009611546565b5b600061101884828501610f0a565b91505092915050565b61102a81611439565b82525050565b6110398161144b565b82525050565b611048816114a0565b82525050565b611057816114c4565b82525050565b600061106a603983611252565b915061107582611558565b604082019050919050565b600061108d603883611252565b9150611098826115a7565b604082019050919050565b60006110b0604383611252565b91506110bb826115f6565b606082019050919050565b60006110d3603483611252565b91506110de8261166b565b604082019050919050565b6110f281611489565b82525050565b600060208201905061110d6000830184611021565b92915050565b60006040820190506111286000830185611021565b61113560208301846110e9565b9392505050565b6000602082019050611151600083018461103f565b92915050565b600060208201905061116c600083018461104e565b92915050565b6000602082019050818103600083015261118b8161105d565b9050919050565b600060208201905081810360008301526111ab81611080565b9050919050565b600060208201905081810360008301526111cb816110a3565b9050919050565b600060208201905081810360008301526111eb816110c6565b9050919050565b600060608201905061120760008301866110e9565b6112146020830185611021565b6112216040830184611030565b949350505050565b600060408201905061123e60008301856110e9565b61124b6020830184611030565b9392505050565b600082825260208201905092915050565b600061126e82611489565b915061127983611489565b92508261128957611288611517565b5b828204905092915050565b6000808291508390505b60018511156112de578086048111156112ba576112b96114e8565b5b60018516156112c95780820291505b80810290506112d78561154b565b945061129e565b94509492505050565b60006112f282611489565b91506112fd83611493565b925061132a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611332565b905092915050565b60008261134257600190506113fe565b8161135057600090506113fe565b816001811461136657600281146113705761139f565b60019150506113fe565b60ff841115611382576113816114e8565b5b8360020a915084821115611399576113986114e8565b5b506113fe565b5060208310610133831016604e8410600b84101617156113d45782820a9050838111156113cf576113ce6114e8565b5b6113fe565b6113e18484846001611294565b925090508184048111156113f8576113f76114e8565b5b81810290505b9392505050565b600061141082611493565b915061141b83611493565b92508282101561142e5761142d6114e8565b5b828203905092915050565b600061144482611469565b9050919050565b60008115159050919050565b600061146282611439565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114ab826114b2565b9050919050565b60006114bd82611469565b9050919050565b60006114cf826114d6565b9050919050565b60006114e182611469565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f41334372763241334372764761756765546f6b656e45786368616e67653a204e60008201527f6f7420656e6f7567682061334372764761756765546f6b656e00000000000000602082015250565b7f41334372763241334372764761756765546f6b656e45786368616e67653a205360008201527f6f6d6520746f6b656e206e6f7420636f6d70617469626c650000000000000000602082015250565b7f41334372763241334372764761756765546f6b656e45786368616e67653a204e60008201527f6f7420656e6f756768206133437276546f6b656e20616674657220776974686460208201527f7261770000000000000000000000000000000000000000000000000000000000604082015250565b7f41334372763241334372764761756765546f6b656e45786368616e67653a204e60008201527f6f7420656e6f756768206133437276546f6b656e000000000000000000000000602082015250565b6116c381611439565b81146116ce57600080fd5b50565b6116da8161144b565b81146116e557600080fd5b50565b6116f181611457565b81146116fc57600080fd5b50565b61170881611489565b811461171357600080fd5b50565b61171f81611493565b811461172a57600080fd5b5056fea2646970667358221220487fa4255e7643c3e0ab89ae3bba8d658f6f67b1cc5a73de296fce8a51e5843b64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2351:67",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:67"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:67",
                "type": ""
              }
            ],
            "src": "7:143:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:67"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:67",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:67"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:67"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:67",
                "type": ""
              }
            ],
            "src": "156:351:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "659:220:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "669:74:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "735:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "740:2:67",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "676:58:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "676:67:67"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "669:3:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "841:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                      "nodeType": "YulIdentifier",
                      "src": "752:88:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:93:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "752:93:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "854:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "865:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "870:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "861:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "854:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "647:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "655:3:67",
                "type": ""
              }
            ],
            "src": "513:366:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1056:248:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1066:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1078:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1089:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1074:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1066:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1113:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1124:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1109:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1109:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1132:4:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1138:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1128:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1128:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1102:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1102:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:139:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1292:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1166:124:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:131:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1158:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1036:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1051:4:67",
                "type": ""
              }
            ],
            "src": "885:419:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1350:35:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1360:19:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1376:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1370:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1360:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1343:6:67",
                "type": ""
              }
            ],
            "src": "1310:75:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1487:73:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1504:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1509:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1497:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:19:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1497:19:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1525:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1544:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1549:4:67",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1540:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1540:14:67"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1525:11:67"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1459:3:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1464:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1475:11:67",
                "type": ""
              }
            ],
            "src": "1391:169:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1611:51:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1621:35:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1650:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1632:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:24:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1621:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1593:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1603:7:67",
                "type": ""
              }
            ],
            "src": "1566:96:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1713:81:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1723:65:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1738:5:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1745:42:67",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1734:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1734:54:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1723:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1695:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1705:7:67",
                "type": ""
              }
            ],
            "src": "1668:126:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1889:28:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1906:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1909:1:67",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1899:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:12:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1899:12:67"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1800:117:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2012:28:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2029:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2032:1:67",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2022:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:12:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2022:12:67"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1923:117:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2152:68:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2174:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2182:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2170:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2170:14:67"
                      },
                      {
                        "hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2186:26:67",
                        "type": "",
                        "value": "Zero address not allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2163:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2163:50:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2163:50:67"
                }
              ]
            },
            "name": "store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2144:6:67",
                "type": ""
              }
            ],
            "src": "2046:174:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2269:79:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2326:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2335:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2338:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2328:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2328:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2328:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2292:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2317:5:67"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2299:17:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2299:24:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2289:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2289:35:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2282:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2282:43:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2279:2:67"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2262:5:67",
                "type": ""
              }
            ],
            "src": "2226:122:67"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address not allowed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15242:67",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:67"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:67",
                "type": ""
              }
            ],
            "src": "7:139:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:67"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:67",
                "type": ""
              }
            ],
            "src": "152:137:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "362:102:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "372:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "381:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "372:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "452:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$1107",
                      "nodeType": "YulIdentifier",
                      "src": "410:41:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:48:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "410:48:67"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$1107",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "340:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "348:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "356:5:67",
                "type": ""
              }
            ],
            "src": "295:169:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "522:87:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "532:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "554:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "541:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "541:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "532:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "597:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "570:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "570:33:67"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "500:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "508:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "516:5:67",
                "type": ""
              }
            ],
            "src": "470:139:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "678:80:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "688:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "703:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "697:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "688:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "746:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "719:26:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:33:67"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "656:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "664:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "672:5:67",
                "type": ""
              }
            ],
            "src": "615:143:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "825:78:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "835:22:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "850:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "844:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "844:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "835:5:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "891:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "866:24:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "866:31:67"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "803:6:67",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "811:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "819:5:67",
                "type": ""
              }
            ],
            "src": "764:139:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1073:807:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1120:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1122:77:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1122:79:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1122:79:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1094:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1103:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1090:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:3:67",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1086:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:33:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1083:2:67"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1213:117:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1228:15:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1242:1:67",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1232:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1257:63:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1292:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1303:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1288:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1288:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1312:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1267:20:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:53:67"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1257:6:67"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1340:133:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1355:16:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1369:2:67",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1359:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1385:78:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1435:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1446:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1431:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1431:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1455:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$1107",
                          "nodeType": "YulIdentifier",
                          "src": "1395:35:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1395:68:67"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1385:6:67"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1483:118:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1498:16:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:2:67",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1502:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1528:63:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1563:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1574:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1559:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1559:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1583:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1538:20:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1538:53:67"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1528:6:67"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1611:133:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1626:16:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:67",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1630:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1656:78:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1706:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1717:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1702:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1702:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1726:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$1107",
                          "nodeType": "YulIdentifier",
                          "src": "1666:35:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1666:68:67"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1656:6:67"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1754:119:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1769:17:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1783:3:67",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1773:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1800:63:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1835:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1846:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1831:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1831:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1855:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1810:20:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1810:53:67"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1800:6:67"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$1107t_addresst_contract$_IERC20_$1107t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1011:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1022:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1034:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1042:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1050:6:67",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1058:6:67",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1066:6:67",
                "type": ""
              }
            ],
            "src": "909:971:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1960:271:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2006:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2008:77:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2008:79:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2008:79:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1981:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1990:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1977:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1973:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1973:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1970:2:67"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2099:125:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2114:15:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2128:1:67",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2118:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2143:71:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2186:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2197:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2182:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2182:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2206:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2153:28:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2153:61:67"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2143:6:67"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1930:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1941:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1953:6:67",
                "type": ""
              }
            ],
            "src": "1886:345:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2314:274:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2360:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2362:77:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2362:79:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2362:79:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2335:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2344:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2331:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2331:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2356:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2327:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2324:2:67"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2453:128:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2468:15:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2482:1:67",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2472:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2497:74:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2543:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2554:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2539:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2539:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2563:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2507:31:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2507:64:67"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2497:6:67"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2284:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2295:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2307:6:67",
                "type": ""
              }
            ],
            "src": "2237:351:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2669:272:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2715:83:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2717:77:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2717:79:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2717:79:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2690:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2699:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2686:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2686:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2711:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2682:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "2679:2:67"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2808:126:67",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2823:15:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2837:1:67",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2827:6:67",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2852:72:67",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2896:9:67"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2907:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2892:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2892:22:67"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2916:7:67"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2862:29:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2862:62:67"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2852:6:67"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2639:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2650:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2662:6:67",
                "type": ""
              }
            ],
            "src": "2594:347:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3012:53:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3029:3:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3052:5:67"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3034:17:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3034:24:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3022:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:37:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3022:37:67"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3000:5:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3007:3:67",
                "type": ""
              }
            ],
            "src": "2947:118:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3130:50:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3147:3:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3167:5:67"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3152:14:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3152:21:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3140:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3140:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3140:34:67"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3118:5:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3125:3:67",
                "type": ""
              }
            ],
            "src": "3071:109:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3266:81:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3283:3:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3334:5:67"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IERC20_$1107_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3288:45:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3288:52:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3276:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3276:65:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3276:65:67"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IERC20_$1107_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3254:5:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3261:3:67",
                "type": ""
              }
            ],
            "src": "3186:161:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3443:91:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3460:3:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3521:5:67"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IRewardOnlyGauge_$9647_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3465:55:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3465:62:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3453:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3453:75:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3453:75:67"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IRewardOnlyGauge_$9647_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3431:5:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3438:3:67",
                "type": ""
              }
            ],
            "src": "3353:181:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3686:220:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3696:74:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3762:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3767:2:67",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3703:58:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3703:67:67"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3696:3:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3868:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2",
                      "nodeType": "YulIdentifier",
                      "src": "3779:88:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3779:93:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3779:93:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3881:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3892:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3897:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3888:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3888:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3881:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3674:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3682:3:67",
                "type": ""
              }
            ],
            "src": "3540:366:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4058:220:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4068:74:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4134:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4139:2:67",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4075:58:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4075:67:67"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4068:3:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4240:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf",
                      "nodeType": "YulIdentifier",
                      "src": "4151:88:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:93:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4151:93:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4253:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4264:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4269:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4260:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4253:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4046:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4054:3:67",
                "type": ""
              }
            ],
            "src": "3912:366:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4430:220:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4440:74:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4506:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4511:2:67",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4447:58:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4447:67:67"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4440:3:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4612:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e",
                      "nodeType": "YulIdentifier",
                      "src": "4523:88:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:93:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4523:93:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4625:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4636:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4641:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4632:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4625:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4418:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4426:3:67",
                "type": ""
              }
            ],
            "src": "4284:366:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4802:220:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4812:74:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4878:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4883:2:67",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4819:58:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4819:67:67"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4812:3:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4984:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e",
                      "nodeType": "YulIdentifier",
                      "src": "4895:88:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4895:93:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4895:93:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4997:19:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5008:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5013:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5004:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5004:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4997:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4790:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4798:3:67",
                "type": ""
              }
            ],
            "src": "4656:366:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5093:53:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5110:3:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5133:5:67"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5115:17:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5115:24:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5103:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5103:37:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5103:37:67"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5081:5:67",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5088:3:67",
                "type": ""
              }
            ],
            "src": "5028:118:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5250:124:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5260:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5272:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5283:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5268:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5268:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5260:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5340:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5353:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5364:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5349:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5349:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5296:43:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5296:71:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5296:71:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5222:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5234:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5245:4:67",
                "type": ""
              }
            ],
            "src": "5152:222:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5506:206:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5516:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5528:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5539:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5524:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5524:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5516:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5596:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5609:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5620:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5605:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5605:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5552:43:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:71:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5552:71:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5677:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5690:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5701:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5686:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5686:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5633:43:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5633:72:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5633:72:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5470:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5482:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5490:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5501:4:67",
                "type": ""
              }
            ],
            "src": "5380:332:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5831:139:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5841:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5853:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5864:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5849:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5849:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5841:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5936:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5949:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5960:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5945:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5945:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IERC20_$1107_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5877:58:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5877:86:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5877:86:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1107__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5803:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5815:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5826:4:67",
                "type": ""
              }
            ],
            "src": "5718:252:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6099:149:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6109:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6121:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6132:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6117:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6117:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6109:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6214:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6227:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6238:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6223:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6223:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IRewardOnlyGauge_$9647_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6145:68:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6145:96:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6145:96:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IRewardOnlyGauge_$9647__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6071:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6083:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6094:4:67",
                "type": ""
              }
            ],
            "src": "5976:272:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6425:248:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6435:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6447:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6458:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6443:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6443:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6435:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6482:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6493:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6478:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6478:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6501:4:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6507:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6497:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6497:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6471:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6471:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6471:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6527:139:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6661:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6535:124:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6535:131:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6527:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6405:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6420:4:67",
                "type": ""
              }
            ],
            "src": "6254:419:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6850:248:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6860:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6872:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6883:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6868:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6868:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6860:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6907:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6918:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6903:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6903:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6926:4:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6932:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6922:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6922:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6896:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6896:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6896:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6952:139:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7086:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6960:124:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6960:131:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6952:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6830:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6845:4:67",
                "type": ""
              }
            ],
            "src": "6679:419:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7275:248:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7285:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7297:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7308:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7293:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7293:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7285:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7332:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7343:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7328:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7328:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7351:4:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7357:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7347:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7347:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7321:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7321:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7321:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7377:139:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7511:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7385:124:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7385:131:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7377:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7255:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7270:4:67",
                "type": ""
              }
            ],
            "src": "7104:419:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7700:248:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7710:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7722:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7733:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7718:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7718:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7710:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7757:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7768:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7753:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7753:17:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7776:4:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7782:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7772:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7772:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7746:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7746:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7746:47:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7802:139:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7936:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7810:124:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7810:131:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7802:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7680:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7695:4:67",
                "type": ""
              }
            ],
            "src": "7529:419:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8102:282:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8112:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8124:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8135:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8120:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8120:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8112:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8192:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8205:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8216:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8201:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8201:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8148:43:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8148:71:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8148:71:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8273:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8286:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8297:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8282:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8282:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8229:43:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8229:72:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8229:72:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8349:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8362:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8373:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8358:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8358:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8311:37:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8311:66:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8311:66:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8058:9:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8070:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8078:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8086:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8097:4:67",
                "type": ""
              }
            ],
            "src": "7954:430:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8510:200:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8520:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8532:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8543:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8528:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8528:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8520:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8600:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8613:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8624:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8609:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8609:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8556:43:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8556:71:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8556:71:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8675:6:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8688:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8699:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8684:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8684:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8637:37:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8637:66:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8637:66:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8474:9:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8486:6:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8494:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8505:4:67",
                "type": ""
              }
            ],
            "src": "8390:320:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8756:35:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8766:19:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8782:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8776:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8776:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "8766:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8749:6:67",
                "type": ""
              }
            ],
            "src": "8716:75:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8893:73:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8910:3:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8915:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8903:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8903:19:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8903:19:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8931:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8950:3:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8955:4:67",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8946:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8946:14:67"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8931:11:67"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8865:3:67",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8870:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8881:11:67",
                "type": ""
              }
            ],
            "src": "8797:169:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9014:143:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9024:25:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9047:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9029:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9029:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9024:1:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9058:25:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9081:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9063:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9063:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9058:1:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9105:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "9107:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9107:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9107:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9102:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9095:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9095:9:67"
                  },
                  "nodeType": "YulIf",
                  "src": "9092:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9137:14:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9146:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9149:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9142:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9142:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9137:1:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9003:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9006:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9012:1:67",
                "type": ""
              }
            ],
            "src": "8972:185:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9236:775:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9246:15:67",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "9255:6:67"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9246:5:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9270:14:67",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "9279:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9270:4:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9328:677:67",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9416:22:67",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "9418:16:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9418:18:67"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9418:18:67"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9394:4:67"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "9404:3:67"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "9409:4:67"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "9400:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9400:14:67"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "9391:2:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9391:24:67"
                        },
                        "nodeType": "YulIf",
                        "src": "9388:2:67"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9483:419:67",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9863:25:67",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "9876:5:67"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "9883:4:67"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "9872:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9872:16:67"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9863:5:67"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9458:8:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9468:1:67",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9454:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9454:16:67"
                        },
                        "nodeType": "YulIf",
                        "src": "9451:2:67"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9915:23:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9927:4:67"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9933:4:67"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "9923:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9923:15:67"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9915:4:67"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9951:44:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9986:8:67"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "9963:22:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9963:32:67"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "9951:8:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9304:8:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9314:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9301:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9301:15:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9317:2:67",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9297:3:67",
                    "statements": []
                  },
                  "src": "9293:712:67"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "9191:6:67",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "9199:5:67",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9206:8:67",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "9216:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9224:5:67",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9231:4:67",
                "type": ""
              }
            ],
            "src": "9163:848:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10081:217:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10091:31:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10117:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10099:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10099:23:67"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "10091:4:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10131:37:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10159:8:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "10143:15:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10143:25:67"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "10131:8:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10178:113:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10208:4:67"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10214:8:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10224:66:67",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "10187:20:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10187:104:67"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10178:5:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10056:4:67",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10062:8:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10075:5:67",
                "type": ""
              }
            ],
            "src": "10017:281:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10364:1013:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10559:20:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10561:10:67",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10570:1:67",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10561:5:67"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10572:5:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10549:8:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10542:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10542:16:67"
                  },
                  "nodeType": "YulIf",
                  "src": "10539:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10604:20:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10606:10:67",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10615:1:67",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10606:5:67"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10617:5:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10598:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10591:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10591:12:67"
                  },
                  "nodeType": "YulIf",
                  "src": "10588:2:67"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10734:20:67",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10736:10:67",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10745:1:67",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10736:5:67"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10747:5:67"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10727:27:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10732:1:67",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10778:176:67",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10813:22:67",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10815:16:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10815:18:67"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10815:18:67"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10798:8:67"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10808:3:67",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10795:2:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10795:17:67"
                            },
                            "nodeType": "YulIf",
                            "src": "10792:2:67"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "10848:25:67",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10861:1:67",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10864:8:67"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "10857:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10857:16:67"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10848:5:67"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10904:22:67",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10906:16:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10906:18:67"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10906:18:67"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "10892:5:67"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "10899:3:67"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10889:2:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10889:14:67"
                            },
                            "nodeType": "YulIf",
                            "src": "10886:2:67"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10939:5:67"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10763:191:67",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10768:1:67",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10684:4:67"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10677:277:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11086:123:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11100:28:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11113:4:67"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11119:8:67"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "11109:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11109:19:67"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11100:5:67"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11159:22:67",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11161:16:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11161:18:67"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11161:18:67"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "11147:5:67"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "11154:3:67"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11144:2:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11144:14:67"
                        },
                        "nodeType": "YulIf",
                        "src": "11141:2:67"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11194:5:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "10989:4:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10995:2:67",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "10986:2:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10986:12:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11003:8:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11013:2:67",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11000:2:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11000:16:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10982:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10982:35:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11038:4:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11044:3:67",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11035:2:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11035:13:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11053:8:67"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11063:2:67",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11050:2:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11050:16:67"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11031:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11031:36:67"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10966:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10966:111:67"
                  },
                  "nodeType": "YulIf",
                  "src": "10963:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11219:57:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11253:1:67",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11256:4:67"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11262:8:67"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "11272:3:67"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "11234:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11234:42:67"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11219:5:67"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11226:4:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11315:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11317:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11317:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11317:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "11292:5:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "11303:3:67"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11308:4:67"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "11299:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11299:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11289:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11289:25:67"
                  },
                  "nodeType": "YulIf",
                  "src": "11286:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11346:25:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "11359:5:67"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11366:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11355:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11355:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11346:5:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10334:4:67",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10340:8:67",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "10350:3:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10358:5:67",
                "type": ""
              }
            ],
            "src": "10304:1073:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11426:142:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11436:23:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11457:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "11441:15:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11441:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11436:1:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11468:23:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11489:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "11473:15:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11473:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11468:1:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11513:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11515:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11515:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11515:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11507:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11510:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11504:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11504:8:67"
                  },
                  "nodeType": "YulIf",
                  "src": "11501:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11545:17:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11557:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11560:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11553:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11553:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11545:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11412:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11415:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11421:4:67",
                "type": ""
              }
            ],
            "src": "11383:185:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11619:51:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11629:35:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11658:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11640:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11640:24:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11629:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11601:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11611:7:67",
                "type": ""
              }
            ],
            "src": "11574:96:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11718:48:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11728:32:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11753:5:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11746:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11746:13:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11739:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11739:21:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11728:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11700:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11710:7:67",
                "type": ""
              }
            ],
            "src": "11676:90:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11832:51:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11842:35:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11871:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "11853:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11853:24:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11842:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$1107",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11814:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11824:7:67",
                "type": ""
              }
            ],
            "src": "11772:111:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11934:81:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11944:65:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11959:5:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11966:42:67",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11955:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11955:54:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11944:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11916:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11926:7:67",
                "type": ""
              }
            ],
            "src": "11889:126:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12066:32:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12076:16:67",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12087:5:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12076:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12048:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12058:7:67",
                "type": ""
              }
            ],
            "src": "12021:77:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12147:43:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12157:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12172:5:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12179:4:67",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12168:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:16:67"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12157:7:67"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12129:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12139:7:67",
                "type": ""
              }
            ],
            "src": "12104:86:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12271:81:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12281:65:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12340:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IERC20_$1107_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12294:45:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12294:52:67"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12281:9:67"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1107_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12251:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12261:9:67",
                "type": ""
              }
            ],
            "src": "12196:156:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12433:53:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12443:37:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12474:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12456:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12456:24:67"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12443:9:67"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IERC20_$1107_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12413:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12423:9:67",
                "type": ""
              }
            ],
            "src": "12358:128:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12577:91:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12587:75:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12656:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IRewardOnlyGauge_$9647_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12600:55:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12600:62:67"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12587:9:67"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IRewardOnlyGauge_$9647_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12557:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12567:9:67",
                "type": ""
              }
            ],
            "src": "12492:176:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12759:53:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12769:37:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12800:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12782:17:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12782:24:67"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12769:9:67"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IRewardOnlyGauge_$9647_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12739:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12749:9:67",
                "type": ""
              }
            ],
            "src": "12674:138:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12846:152:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12863:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12866:77:67",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12856:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12856:88:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12856:88:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12960:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12963:4:67",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12953:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12953:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12953:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12984:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12987:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12977:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12977:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12977:15:67"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12818:180:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13032:152:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13049:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13052:77:67",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13042:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13042:88:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13042:88:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13146:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13149:4:67",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13139:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13139:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13139:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13170:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13173:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13163:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13163:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13163:15:67"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "13004:180:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13279:28:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13296:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13299:1:67",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13289:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13289:12:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13289:12:67"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "13190:117:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13402:28:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13419:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13422:1:67",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13412:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13412:12:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13412:12:67"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "13313:117:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13487:51:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13497:34:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13522:1:67",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13525:5:67"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "13518:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13518:13:67"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "13497:8:67"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13468:5:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "13478:8:67",
                "type": ""
              }
            ],
            "src": "13436:102:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13650:138:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13672:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13680:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13668:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13668:14:67"
                      },
                      {
                        "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13684:34:67",
                        "type": "",
                        "value": "A3Crv2A3CrvGaugeTokenExchange: N"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13661:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13661:58:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13661:58:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13740:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13748:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13736:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13736:15:67"
                      },
                      {
                        "hexValue": "6f7420656e6f7567682061334372764761756765546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13753:27:67",
                        "type": "",
                        "value": "ot enough a3CrvGaugeToken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13729:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13729:52:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13729:52:67"
                }
              ]
            },
            "name": "store_literal_in_memory_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13642:6:67",
                "type": ""
              }
            ],
            "src": "13544:244:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13900:137:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13922:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13930:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13918:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13918:14:67"
                      },
                      {
                        "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a2053",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13934:34:67",
                        "type": "",
                        "value": "A3Crv2A3CrvGaugeTokenExchange: S"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13911:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13911:58:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13911:58:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13990:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13998:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13986:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13986:15:67"
                      },
                      {
                        "hexValue": "6f6d6520746f6b656e206e6f7420636f6d70617469626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14003:26:67",
                        "type": "",
                        "value": "ome token not compatible"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13979:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13979:51:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13979:51:67"
                }
              ]
            },
            "name": "store_literal_in_memory_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13892:6:67",
                "type": ""
              }
            ],
            "src": "13794:243:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14149:185:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14171:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14179:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14167:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14167:14:67"
                      },
                      {
                        "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14183:34:67",
                        "type": "",
                        "value": "A3Crv2A3CrvGaugeTokenExchange: N"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14160:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14160:58:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14160:58:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14239:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14247:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14235:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14235:15:67"
                      },
                      {
                        "hexValue": "6f7420656e6f756768206133437276546f6b656e206166746572207769746864",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14252:34:67",
                        "type": "",
                        "value": "ot enough a3CrvToken after withd"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14228:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14228:59:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14228:59:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14308:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14316:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14304:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14304:15:67"
                      },
                      {
                        "hexValue": "726177",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14321:5:67",
                        "type": "",
                        "value": "raw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14297:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14297:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14297:30:67"
                }
              ]
            },
            "name": "store_literal_in_memory_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14141:6:67",
                "type": ""
              }
            ],
            "src": "14043:291:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14446:133:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14468:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14476:1:67",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14464:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14464:14:67"
                      },
                      {
                        "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14480:34:67",
                        "type": "",
                        "value": "A3Crv2A3CrvGaugeTokenExchange: N"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14457:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14457:58:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14457:58:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14536:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14544:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14532:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14532:15:67"
                      },
                      {
                        "hexValue": "6f7420656e6f756768206133437276546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14549:22:67",
                        "type": "",
                        "value": "ot enough a3CrvToken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14525:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14525:47:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14525:47:67"
                }
              ]
            },
            "name": "store_literal_in_memory_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14438:6:67",
                "type": ""
              }
            ],
            "src": "14340:239:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14628:79:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14685:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14694:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14697:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14687:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14687:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14687:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14651:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14676:5:67"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "14658:17:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14658:24:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14648:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14648:35:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14641:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14641:43:67"
                  },
                  "nodeType": "YulIf",
                  "src": "14638:2:67"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14621:5:67",
                "type": ""
              }
            ],
            "src": "14585:122:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14753:76:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14807:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14816:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14819:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14809:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14809:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14809:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14776:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14798:5:67"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14783:14:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14783:21:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14773:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14773:32:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14766:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14766:40:67"
                  },
                  "nodeType": "YulIf",
                  "src": "14763:2:67"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14746:5:67",
                "type": ""
              }
            ],
            "src": "14713:116:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14893:94:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14965:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14974:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14977:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14967:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14967:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14967:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14916:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14956:5:67"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$1107",
                              "nodeType": "YulIdentifier",
                              "src": "14923:32:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14923:39:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14913:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14913:50:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14906:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14906:58:67"
                  },
                  "nodeType": "YulIf",
                  "src": "14903:2:67"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$1107",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14886:5:67",
                "type": ""
              }
            ],
            "src": "14835:152:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15036:79:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15093:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15102:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15105:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15095:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15095:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15095:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15059:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15084:5:67"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "15066:17:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15066:24:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15056:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15056:35:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15049:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15049:43:67"
                  },
                  "nodeType": "YulIf",
                  "src": "15046:2:67"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15029:5:67",
                "type": ""
              }
            ],
            "src": "14993:122:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15162:77:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15217:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15226:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15229:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15219:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15219:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15219:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15185:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15208:5:67"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "15192:15:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15192:22:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15182:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15182:33:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15175:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15175:41:67"
                  },
                  "nodeType": "YulIf",
                  "src": "15172:2:67"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15155:5:67",
                "type": ""
              }
            ],
            "src": "15121:118:67"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$1107(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1107(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$1107t_addresst_contract$_IERC20_$1107t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$1107(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IERC20_$1107(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$1107_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1107_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IRewardOnlyGauge_$9647_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRewardOnlyGauge_$9647_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1107__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1107_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IRewardOnlyGauge_$9647__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRewardOnlyGauge_$9647_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_bool__to_t_uint256_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$1107(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_contract$_IERC20_$1107_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$1107_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1107_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRewardOnlyGauge_$9647_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IRewardOnlyGauge_$9647_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRewardOnlyGauge_$9647_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"A3Crv2A3CrvGaugeTokenExchange: N\")\n\n        mstore(add(memPtr, 32), \"ot enough a3CrvGaugeToken\")\n\n    }\n\n    function store_literal_in_memory_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf(memPtr) {\n\n        mstore(add(memPtr, 0), \"A3Crv2A3CrvGaugeTokenExchange: S\")\n\n        mstore(add(memPtr, 32), \"ome token not compatible\")\n\n    }\n\n    function store_literal_in_memory_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e(memPtr) {\n\n        mstore(add(memPtr, 0), \"A3Crv2A3CrvGaugeTokenExchange: N\")\n\n        mstore(add(memPtr, 32), \"ot enough a3CrvToken after withd\")\n\n        mstore(add(memPtr, 64), \"raw\")\n\n    }\n\n    function store_literal_in_memory_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e(memPtr) {\n\n        mstore(add(memPtr, 0), \"A3Crv2A3CrvGaugeTokenExchange: N\")\n\n        mstore(add(memPtr, 32), \"ot enough a3CrvToken\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$1107(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1107(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "312:2913:62:-:0;;;487:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:1;539:25;;:11;:25;;;;531:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;637:11;606;;:43;;;;;;;;;;;;;;;;;;680:11;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;660:10;;:43;;;;;;;;;;;;;;;;;;739:11;714:15;;:37;;;;;;;;;;;;;;;;;;487:272;312:2913;;7:143:67;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;513:366::-;655:3;676:67;740:2;735:3;676:67;:::i;:::-;669:74;;752:93;841:3;752:93;:::i;:::-;870:2;865:3;861:12;854:19;;659:220;;;:::o;885:419::-;1051:4;1089:2;1078:9;1074:18;1066:26;;1138:9;1132:4;1128:20;1124:1;1113:9;1109:17;1102:47;1166:131;1292:4;1166:131;:::i;:::-;1158:139;;1056:248;;;:::o;1391:169::-;1475:11;1509:6;1504:3;1497:19;1549:4;1544:3;1540:14;1525:29;;1487:73;;;;:::o;1566:96::-;1603:7;1632:24;1650:5;1632:24;:::i;:::-;1621:35;;1611:51;;;:::o;1668:126::-;1705:7;1745:42;1738:5;1734:54;1723:65;;1713:81;;;:::o;1923:117::-;2032:1;2029;2022:12;2046:174;2186:26;2182:1;2174:6;2170:14;2163:50;2152:68;:::o;2226:122::-;2299:24;2317:5;2299:24;:::i;:::-;2292:5;2289:35;2279:2;;2338:1;2335;2328:12;2279:2;2269:79;:::o;312:2913:62:-;;;;;;;",
  "deployedSourceMap": "312:2913:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;767:2455;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;449:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;418:24;;;;;;;;;;;;;:::o;376:35::-;;;;;;;;;;;;:::o;767:2455::-;972:10;;;;;;;;;;;964:18;;:4;:18;;;:43;;;;;992:15;;;;;;;;;;;986:21;;:2;:21;;;964:43;963:111;;;;1038:15;;;;;;;;;;;1030:23;;:4;:23;;;:43;;;;;1063:10;;;;;;;;;;;1057:16;;:2;:16;;;1030:43;963:111;941:217;;;;;;;;;;;;:::i;:::-;;;;;;;;;1185:1;1175:6;:11;1171:118;;;1203:4;:13;;;1217:7;1226:4;:14;;;1249:4;1226:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1203:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1271:7;;1171:118;1313:10;;;;;;;;;;;1305:18;;:4;:18;;;:43;;;;;1333:15;;;;;;;;;;;1327:21;;:2;:21;;;1305:43;1301:1914;;;1404:19;1459:10;;;;;;;;;;;1436:44;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1431:2;:51;;;;:::i;:::-;1426:2;:57;;;;:::i;:::-;1404:79;;1516:11;1507:6;:20;;;;:::i;:::-;1498:29;;1609:6;1570:10;;;;;;;;;;;:20;;;1599:4;1570:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;1544:159;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;1768:6;:11;1764:130;;;1800:4;:13;;;1814:7;1823:4;:14;;;1846:4;1823:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1800:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1872:7;;;1764:130;1993:10;;;;;;;;;;;:18;;;2020:11;;;;;;;;;;2034:6;1993:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2056:11;;;;;;;;;;:19;;;2076:6;2084:8;2094:5;2056:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:762;1301:1914;;;2172:19;2227:15;;;;;;;;;;;2204:49;;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2199:2;:56;;;;:::i;:::-;2194:2;:62;;;;:::i;:::-;2172:84;;2289:11;2280:6;:20;;;;:::i;:::-;2271:29;;2387:6;2343:15;;;;;;;;;;;:25;;;2377:4;2343:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;2317:169;;;;;;;;;;;;:::i;:::-;;;;;;;;;2561:1;2551:6;:11;2547:130;;;2583:4;:13;;;2597:7;2606:4;:14;;;2629:4;2606:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2583:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2655:7;;;2547:130;2814:11;;;;;;;;;;:20;;;2835:6;2843:5;2814:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:6;2890:10;;;;;;;;;;;:20;;;2919:4;2890:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2864:174;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:10;;;;;;;;;;;:19;;;3157:8;3167:10;;;;;;;;;;;:20;;;3196:4;3167:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3137:66;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2118:1097;1301:1914;767:2455;;;;;;:::o;449:29::-;;;;;;;;;;;;;:::o;7:139:67:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:169::-;356:5;394:6;381:20;372:29;;410:48;452:5;410:48;:::i;:::-;362:102;;;;:::o;470:139::-;516:5;554:6;541:20;532:29;;570:33;597:5;570:33;:::i;:::-;522:87;;;;:::o;615:143::-;672:5;703:6;697:13;688:22;;719:33;746:5;719:33;:::i;:::-;678:80;;;;:::o;764:139::-;819:5;850:6;844:13;835:22;;866:31;891:5;866:31;:::i;:::-;825:78;;;;:::o;909:971::-;1034:6;1042;1050;1058;1066;1115:3;1103:9;1094:7;1090:23;1086:33;1083:2;;;1122:79;;:::i;:::-;1083:2;1242:1;1267:53;1312:7;1303:6;1292:9;1288:22;1267:53;:::i;:::-;1257:63;;1213:117;1369:2;1395:68;1455:7;1446:6;1435:9;1431:22;1395:68;:::i;:::-;1385:78;;1340:133;1512:2;1538:53;1583:7;1574:6;1563:9;1559:22;1538:53;:::i;:::-;1528:63;;1483:118;1640:2;1666:68;1726:7;1717:6;1706:9;1702:22;1666:68;:::i;:::-;1656:78;;1611:133;1783:3;1810:53;1855:7;1846:6;1835:9;1831:22;1810:53;:::i;:::-;1800:63;;1754:119;1073:807;;;;;;;;:::o;1886:345::-;1953:6;2002:2;1990:9;1981:7;1977:23;1973:32;1970:2;;;2008:79;;:::i;:::-;1970:2;2128:1;2153:61;2206:7;2197:6;2186:9;2182:22;2153:61;:::i;:::-;2143:71;;2099:125;1960:271;;;;:::o;2237:351::-;2307:6;2356:2;2344:9;2335:7;2331:23;2327:32;2324:2;;;2362:79;;:::i;:::-;2324:2;2482:1;2507:64;2563:7;2554:6;2543:9;2539:22;2507:64;:::i;:::-;2497:74;;2453:128;2314:274;;;;:::o;2594:347::-;2662:6;2711:2;2699:9;2690:7;2686:23;2682:32;2679:2;;;2717:79;;:::i;:::-;2679:2;2837:1;2862:62;2916:7;2907:6;2896:9;2892:22;2862:62;:::i;:::-;2852:72;;2808:126;2669:272;;;;:::o;2947:118::-;3034:24;3052:5;3034:24;:::i;:::-;3029:3;3022:37;3012:53;;:::o;3071:109::-;3152:21;3167:5;3152:21;:::i;:::-;3147:3;3140:34;3130:50;;:::o;3186:161::-;3288:52;3334:5;3288:52;:::i;:::-;3283:3;3276:65;3266:81;;:::o;3353:181::-;3465:62;3521:5;3465:62;:::i;:::-;3460:3;3453:75;3443:91;;:::o;3540:366::-;3682:3;3703:67;3767:2;3762:3;3703:67;:::i;:::-;3696:74;;3779:93;3868:3;3779:93;:::i;:::-;3897:2;3892:3;3888:12;3881:19;;3686:220;;;:::o;3912:366::-;4054:3;4075:67;4139:2;4134:3;4075:67;:::i;:::-;4068:74;;4151:93;4240:3;4151:93;:::i;:::-;4269:2;4264:3;4260:12;4253:19;;4058:220;;;:::o;4284:366::-;4426:3;4447:67;4511:2;4506:3;4447:67;:::i;:::-;4440:74;;4523:93;4612:3;4523:93;:::i;:::-;4641:2;4636:3;4632:12;4625:19;;4430:220;;;:::o;4656:366::-;4798:3;4819:67;4883:2;4878:3;4819:67;:::i;:::-;4812:74;;4895:93;4984:3;4895:93;:::i;:::-;5013:2;5008:3;5004:12;4997:19;;4802:220;;;:::o;5028:118::-;5115:24;5133:5;5115:24;:::i;:::-;5110:3;5103:37;5093:53;;:::o;5152:222::-;5245:4;5283:2;5272:9;5268:18;5260:26;;5296:71;5364:1;5353:9;5349:17;5340:6;5296:71;:::i;:::-;5250:124;;;;:::o;5380:332::-;5501:4;5539:2;5528:9;5524:18;5516:26;;5552:71;5620:1;5609:9;5605:17;5596:6;5552:71;:::i;:::-;5633:72;5701:2;5690:9;5686:18;5677:6;5633:72;:::i;:::-;5506:206;;;;;:::o;5718:252::-;5826:4;5864:2;5853:9;5849:18;5841:26;;5877:86;5960:1;5949:9;5945:17;5936:6;5877:86;:::i;:::-;5831:139;;;;:::o;5976:272::-;6094:4;6132:2;6121:9;6117:18;6109:26;;6145:96;6238:1;6227:9;6223:17;6214:6;6145:96;:::i;:::-;6099:149;;;;:::o;6254:419::-;6420:4;6458:2;6447:9;6443:18;6435:26;;6507:9;6501:4;6497:20;6493:1;6482:9;6478:17;6471:47;6535:131;6661:4;6535:131;:::i;:::-;6527:139;;6425:248;;;:::o;6679:419::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6932:9;6926:4;6922:20;6918:1;6907:9;6903:17;6896:47;6960:131;7086:4;6960:131;:::i;:::-;6952:139;;6850:248;;;:::o;7104:419::-;7270:4;7308:2;7297:9;7293:18;7285:26;;7357:9;7351:4;7347:20;7343:1;7332:9;7328:17;7321:47;7385:131;7511:4;7385:131;:::i;:::-;7377:139;;7275:248;;;:::o;7529:419::-;7695:4;7733:2;7722:9;7718:18;7710:26;;7782:9;7776:4;7772:20;7768:1;7757:9;7753:17;7746:47;7810:131;7936:4;7810:131;:::i;:::-;7802:139;;7700:248;;;:::o;7954:430::-;8097:4;8135:2;8124:9;8120:18;8112:26;;8148:71;8216:1;8205:9;8201:17;8192:6;8148:71;:::i;:::-;8229:72;8297:2;8286:9;8282:18;8273:6;8229:72;:::i;:::-;8311:66;8373:2;8362:9;8358:18;8349:6;8311:66;:::i;:::-;8102:282;;;;;;:::o;8390:320::-;8505:4;8543:2;8532:9;8528:18;8520:26;;8556:71;8624:1;8613:9;8609:17;8600:6;8556:71;:::i;:::-;8637:66;8699:2;8688:9;8684:18;8675:6;8637:66;:::i;:::-;8510:200;;;;;:::o;8797:169::-;8881:11;8915:6;8910:3;8903:19;8955:4;8950:3;8946:14;8931:29;;8893:73;;;;:::o;8972:185::-;9012:1;9029:20;9047:1;9029:20;:::i;:::-;9024:25;;9063:20;9081:1;9063:20;:::i;:::-;9058:25;;9102:1;9092:2;;9107:18;;:::i;:::-;9092:2;9149:1;9146;9142:9;9137:14;;9014:143;;;;:::o;9163:848::-;9224:5;9231:4;9255:6;9246:15;;9279:5;9270:14;;9293:712;9314:1;9304:8;9301:15;9293:712;;;9409:4;9404:3;9400:14;9394:4;9391:24;9388:2;;;9418:18;;:::i;:::-;9388:2;9468:1;9458:8;9454:16;9451:2;;;9883:4;9876:5;9872:16;9863:25;;9451:2;9933:4;9927;9923:15;9915:23;;9963:32;9986:8;9963:32;:::i;:::-;9951:44;;9293:712;;;9236:775;;;;;;;:::o;10017:281::-;10075:5;10099:23;10117:4;10099:23;:::i;:::-;10091:31;;10143:25;10159:8;10143:25;:::i;:::-;10131:37;;10187:104;10224:66;10214:8;10208:4;10187:104;:::i;:::-;10178:113;;10081:217;;;;:::o;10304:1073::-;10358:5;10549:8;10539:2;;10570:1;10561:10;;10572:5;;10539:2;10598:4;10588:2;;10615:1;10606:10;;10617:5;;10588:2;10684:4;10732:1;10727:27;;;;10768:1;10763:191;;;;10677:277;;10727:27;10745:1;10736:10;;10747:5;;;10763:191;10808:3;10798:8;10795:17;10792:2;;;10815:18;;:::i;:::-;10792:2;10864:8;10861:1;10857:16;10848:25;;10899:3;10892:5;10889:14;10886:2;;;10906:18;;:::i;:::-;10886:2;10939:5;;;10677:277;;11063:2;11053:8;11050:16;11044:3;11038:4;11035:13;11031:36;11013:2;11003:8;11000:16;10995:2;10989:4;10986:12;10982:35;10966:111;10963:2;;;11119:8;11113:4;11109:19;11100:28;;11154:3;11147:5;11144:14;11141:2;;;11161:18;;:::i;:::-;11141:2;11194:5;;10963:2;11234:42;11272:3;11262:8;11256:4;11253:1;11234:42;:::i;:::-;11219:57;;;;11308:4;11303:3;11299:14;11292:5;11289:25;11286:2;;;11317:18;;:::i;:::-;11286:2;11366:4;11359:5;11355:16;11346:25;;10364:1013;;;;;;:::o;11383:185::-;11421:4;11441:18;11457:1;11441:18;:::i;:::-;11436:23;;11473:18;11489:1;11473:18;:::i;:::-;11468:23;;11510:1;11507;11504:8;11501:2;;;11515:18;;:::i;:::-;11501:2;11560:1;11557;11553:9;11545:17;;11426:142;;;;:::o;11574:96::-;11611:7;11640:24;11658:5;11640:24;:::i;:::-;11629:35;;11619:51;;;:::o;11676:90::-;11710:7;11753:5;11746:13;11739:21;11728:32;;11718:48;;;:::o;11772:111::-;11824:7;11853:24;11871:5;11853:24;:::i;:::-;11842:35;;11832:51;;;:::o;11889:126::-;11926:7;11966:42;11959:5;11955:54;11944:65;;11934:81;;;:::o;12021:77::-;12058:7;12087:5;12076:16;;12066:32;;;:::o;12104:86::-;12139:7;12179:4;12172:5;12168:16;12157:27;;12147:43;;;:::o;12196:156::-;12261:9;12294:52;12340:5;12294:52;:::i;:::-;12281:65;;12271:81;;;:::o;12358:128::-;12423:9;12456:24;12474:5;12456:24;:::i;:::-;12443:37;;12433:53;;;:::o;12492:176::-;12567:9;12600:62;12656:5;12600:62;:::i;:::-;12587:75;;12577:91;;;:::o;12674:138::-;12749:9;12782:24;12800:5;12782:24;:::i;:::-;12769:37;;12759:53;;;:::o;12818:180::-;12866:77;12863:1;12856:88;12963:4;12960:1;12953:15;12987:4;12984:1;12977:15;13004:180;13052:77;13049:1;13042:88;13149:4;13146:1;13139:15;13173:4;13170:1;13163:15;13313:117;13422:1;13419;13412:12;13436:102;13478:8;13525:5;13522:1;13518:13;13497:34;;13487:51;;;:::o;13544:244::-;13684:34;13680:1;13672:6;13668:14;13661:58;13753:27;13748:2;13740:6;13736:15;13729:52;13650:138;:::o;13794:243::-;13934:34;13930:1;13922:6;13918:14;13911:58;14003:26;13998:2;13990:6;13986:15;13979:51;13900:137;:::o;14043:291::-;14183:34;14179:1;14171:6;14167:14;14160:58;14252:34;14247:2;14239:6;14235:15;14228:59;14321:5;14316:2;14308:6;14304:15;14297:30;14149:185;:::o;14340:239::-;14480:34;14476:1;14468:6;14464:14;14457:58;14549:22;14544:2;14536:6;14532:15;14525:47;14446:133;:::o;14585:122::-;14658:24;14676:5;14658:24;:::i;:::-;14651:5;14648:35;14638:2;;14697:1;14694;14687:12;14638:2;14628:79;:::o;14713:116::-;14783:21;14798:5;14783:21;:::i;:::-;14776:5;14773:32;14763:2;;14819:1;14816;14809:12;14763:2;14753:76;:::o;14835:152::-;14923:39;14956:5;14923:39;:::i;:::-;14916:5;14913:50;14903:2;;14977:1;14974;14967:12;14903:2;14893:94;:::o;14993:122::-;15066:24;15084:5;15066:24;:::i;:::-;15059:5;15056:35;15046:2;;15105:1;15102;15095:12;15046:2;15036:79;:::o;15121:118::-;15192:22;15208:5;15192:22;:::i;:::-;15185:5;15182:33;15172:2;;15229:1;15226;15219:12;15172:2;15162:77;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\nimport \"../interfaces/ITokenExchange.sol\";\r\nimport \"../connectors/curve/interfaces/IRewardOnlyGauge.sol\";\r\n\r\ncontract A3Crv2A3CrvGaugeTokenExchange is ITokenExchange {\r\n    IRewardOnlyGauge public rewardGauge;\r\n    IERC20 public a3CrvToken;\r\n    IERC20 public a3CrvGaugeToken;\r\n\r\n    constructor(address _curveGauge) {\r\n        require(_curveGauge != address(0), \"Zero address not allowed\");\r\n\r\n        rewardGauge = IRewardOnlyGauge(_curveGauge);\r\n        a3CrvToken = IERC20(rewardGauge.lp_token());\r\n        a3CrvGaugeToken = IERC20(_curveGauge);\r\n    }\r\n\r\n    function exchange(\r\n        address spender,\r\n        IERC20 from,\r\n        address receiver,\r\n        IERC20 to,\r\n        uint256 amount\r\n    ) external override {\r\n        require(\r\n            (from == a3CrvToken && to == a3CrvGaugeToken) ||\r\n                (from == a3CrvGaugeToken && to == a3CrvToken),\r\n            \"A3Crv2A3CrvGaugeTokenExchange: Some token not compatible\"\r\n        );\r\n\r\n        if (amount == 0) {\r\n            from.transfer(spender, from.balanceOf(address(this)));\r\n            return;\r\n        }\r\n\r\n        if (from == a3CrvToken && to == a3CrvGaugeToken) {\r\n            //TODO: denominator usage\r\n            uint256 denominator = 10**(18 - IERC20Metadata(address(a3CrvToken)).decimals());\r\n            amount = amount / denominator;\r\n\r\n            require(\r\n                a3CrvToken.balanceOf(address(this)) >= amount,\r\n                \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken\"\r\n            );\r\n\r\n            // check after denormilization\r\n            if (amount == 0) {\r\n                from.transfer(spender, from.balanceOf(address(this)));\r\n                return;\r\n            }\r\n\r\n            // gauge need approve on deposit cause by transferFrom inside deposit\r\n            a3CrvToken.approve(address(rewardGauge), amount);\r\n            rewardGauge.deposit(amount, receiver, false);\r\n        } else {\r\n            //TODO: denominator usage\r\n            uint256 denominator = 10**(18 - IERC20Metadata(address(a3CrvGaugeToken)).decimals());\r\n            amount = amount / denominator;\r\n\r\n            require(\r\n                a3CrvGaugeToken.balanceOf(address(this)) >= amount,\r\n                \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken\"\r\n            );\r\n\r\n            // check after denormilization\r\n            if (amount == 0) {\r\n                from.transfer(spender, from.balanceOf(address(this)));\r\n                return;\r\n            }\r\n\r\n            // gauge doesn't need approve on withdraw, but we should have amount token\r\n            // on tokenExchange\r\n            rewardGauge.withdraw(amount, false);\r\n            require(\r\n                a3CrvToken.balanceOf(address(this)) >= amount,\r\n                \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw\"\r\n            );\r\n            // reward gauge transfer tokens to msg.sender, so transfer to receiver\r\n            a3CrvToken.transfer(receiver, a3CrvToken.balanceOf(address(this)));\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\work\\overnight\\ovngt-mvp\\contracts\\token_exchanges\\A3Crv2A3CrvGaugeTokenExchange.sol",
  "ast": {
    "absolutePath": "project:/contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol",
    "exportedSymbols": {
      "A3Crv2A3CrvGaugeTokenExchange": [
        12445
      ],
      "IERC20": [
        1107
      ],
      "IERC20Metadata": [
        1132
      ],
      "IRewardOnlyGauge": [
        9647
      ],
      "ITokenExchange": [
        10842
      ]
    },
    "id": 12446,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12167,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:62"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 12168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 1108,
        "src": "68:56:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 12169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 1133,
        "src": "126:75:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITokenExchange.sol",
        "file": "../interfaces/ITokenExchange.sol",
        "id": 12170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 10843,
        "src": "203:42:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/connectors/curve/interfaces/IRewardOnlyGauge.sol",
        "file": "../connectors/curve/interfaces/IRewardOnlyGauge.sol",
        "id": 12171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 9648,
        "src": "247:61:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12172,
              "name": "ITokenExchange",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10842,
              "src": "354:14:62"
            },
            "id": 12173,
            "nodeType": "InheritanceSpecifier",
            "src": "354:14:62"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12445,
        "linearizedBaseContracts": [
          12445,
          10842
        ],
        "name": "A3Crv2A3CrvGaugeTokenExchange",
        "nameLocation": "321:29:62",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "34c0d442",
            "id": 12176,
            "mutability": "mutable",
            "name": "rewardGauge",
            "nameLocation": "400:11:62",
            "nodeType": "VariableDeclaration",
            "scope": 12445,
            "src": "376:35:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
              "typeString": "contract IRewardOnlyGauge"
            },
            "typeName": {
              "id": 12175,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12174,
                "name": "IRewardOnlyGauge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9647,
                "src": "376:16:62"
              },
              "referencedDeclaration": 9647,
              "src": "376:16:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                "typeString": "contract IRewardOnlyGauge"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d864752",
            "id": 12179,
            "mutability": "mutable",
            "name": "a3CrvToken",
            "nameLocation": "432:10:62",
            "nodeType": "VariableDeclaration",
            "scope": 12445,
            "src": "418:24:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1107",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12178,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12177,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1107,
                "src": "418:6:62"
              },
              "referencedDeclaration": 1107,
              "src": "418:6:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1107",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "86d551c7",
            "id": 12182,
            "mutability": "mutable",
            "name": "a3CrvGaugeToken",
            "nameLocation": "463:15:62",
            "nodeType": "VariableDeclaration",
            "scope": 12445,
            "src": "449:29:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1107",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12181,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12180,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1107,
                "src": "449:6:62"
              },
              "referencedDeclaration": 1107,
              "src": "449:6:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1107",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12217,
              "nodeType": "Block",
              "src": "520:239:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12188,
                          "name": "_curveGauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12184,
                          "src": "539:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "562:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "554:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12189,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "554:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "554:10:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "539:25:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
                        "id": 12194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "566:26:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                          "typeString": "literal_string \"Zero address not allowed\""
                        },
                        "value": "Zero address not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                          "typeString": "literal_string \"Zero address not allowed\""
                        }
                      ],
                      "id": 12187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "531:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:62:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12196,
                  "nodeType": "ExpressionStatement",
                  "src": "531:62:62"
                },
                {
                  "expression": {
                    "id": 12201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12197,
                      "name": "rewardGauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "606:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                        "typeString": "contract IRewardOnlyGauge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12199,
                          "name": "_curveGauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12184,
                          "src": "637:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12198,
                        "name": "IRewardOnlyGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9647,
                        "src": "620:16:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRewardOnlyGauge_$9647_$",
                          "typeString": "type(contract IRewardOnlyGauge)"
                        }
                      },
                      "id": 12200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "620:29:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                        "typeString": "contract IRewardOnlyGauge"
                      }
                    },
                    "src": "606:43:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                      "typeString": "contract IRewardOnlyGauge"
                    }
                  },
                  "id": 12202,
                  "nodeType": "ExpressionStatement",
                  "src": "606:43:62"
                },
                {
                  "expression": {
                    "id": 12209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12203,
                      "name": "a3CrvToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12179,
                      "src": "660:10:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12205,
                              "name": "rewardGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12176,
                              "src": "680:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                "typeString": "contract IRewardOnlyGauge"
                              }
                            },
                            "id": 12206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lp_token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9604,
                            "src": "680:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () external returns (address)"
                            }
                          },
                          "id": 12207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "680:22:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12204,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "673:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1107_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 12208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "673:30:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "660:43:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 12210,
                  "nodeType": "ExpressionStatement",
                  "src": "660:43:62"
                },
                {
                  "expression": {
                    "id": 12215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12211,
                      "name": "a3CrvGaugeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12182,
                      "src": "714:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12213,
                          "name": "_curveGauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12184,
                          "src": "739:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12212,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "732:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1107_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 12214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:19:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "714:37:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 12216,
                  "nodeType": "ExpressionStatement",
                  "src": "714:37:62"
                }
              ]
            },
            "id": 12218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12184,
                  "mutability": "mutable",
                  "name": "_curveGauge",
                  "nameLocation": "507:11:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12218,
                  "src": "499:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:21:62"
            },
            "returnParameters": {
              "id": 12186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:62"
            },
            "scope": 12445,
            "src": "487:272:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10841
            ],
            "body": {
              "id": 12443,
              "nodeType": "Block",
              "src": "930:2292:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12235,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12223,
                                  "src": "964:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12236,
                                  "name": "a3CrvToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12179,
                                  "src": "972:10:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "964:18:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12238,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12228,
                                  "src": "986:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12239,
                                  "name": "a3CrvGaugeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12182,
                                  "src": "992:15:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "986:21:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "964:43:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 12242,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "963:45:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12243,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12223,
                                  "src": "1030:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12244,
                                  "name": "a3CrvGaugeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12182,
                                  "src": "1038:15:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "1030:23:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12246,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12228,
                                  "src": "1057:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12247,
                                  "name": "a3CrvToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12179,
                                  "src": "1063:10:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "1057:16:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1030:43:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 12250,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1029:45:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "963:111:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a20536f6d6520746f6b656e206e6f7420636f6d70617469626c65",
                        "id": 12252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1089:58:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf",
                          "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Some token not compatible\""
                        },
                        "value": "A3Crv2A3CrvGaugeTokenExchange: Some token not compatible"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf",
                          "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Some token not compatible\""
                        }
                      ],
                      "id": 12234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "941:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:217:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12254,
                  "nodeType": "ExpressionStatement",
                  "src": "941:217:62"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12255,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12230,
                      "src": "1175:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1185:1:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1175:11:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12273,
                  "nodeType": "IfStatement",
                  "src": "1171:118:62",
                  "trueBody": {
                    "id": 12272,
                    "nodeType": "Block",
                    "src": "1188:101:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12261,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12220,
                              "src": "1217:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12266,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "1249:4:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    ],
                                    "id": 12265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1241:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12264,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1241:7:62",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1241:13:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 12262,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12223,
                                  "src": "1226:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 12263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1046,
                                "src": "1226:14:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 12268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1226:29:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12258,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12223,
                              "src": "1203:4:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "1203:13:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 12269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1203:53:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12270,
                        "nodeType": "ExpressionStatement",
                        "src": "1203:53:62"
                      },
                      {
                        "functionReturnParameters": 12233,
                        "id": 12271,
                        "nodeType": "Return",
                        "src": "1271:7:62"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      },
                      "id": 12276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12274,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12223,
                        "src": "1305:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 12275,
                        "name": "a3CrvToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12179,
                        "src": "1313:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1305:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      },
                      "id": 12279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12277,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12228,
                        "src": "1327:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 12278,
                        "name": "a3CrvGaugeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12182,
                        "src": "1333:15:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1327:21:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1305:43:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12441,
                    "nodeType": "Block",
                    "src": "2118:1097:62",
                    "statements": [
                      {
                        "assignments": [
                          12355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12355,
                            "mutability": "mutable",
                            "name": "denominator",
                            "nameLocation": "2180:11:62",
                            "nodeType": "VariableDeclaration",
                            "scope": 12441,
                            "src": "2172:19:62",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12354,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2172:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12369,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 12356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2194:2:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 12366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3138",
                                  "id": 12357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2199:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 12361,
                                              "name": "a3CrvGaugeToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12182,
                                              "src": "2227:15:62",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            ],
                                            "id": 12360,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2219:7:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 12359,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2219:7:62",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 12362,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2219:24:62",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 12358,
                                        "name": "IERC20Metadata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "2204:14:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1132_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      },
                                      "id": 12363,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2204:40:62",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20Metadata_$1132",
                                        "typeString": "contract IERC20Metadata"
                                      }
                                    },
                                    "id": 12364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1131,
                                    "src": "2204:49:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 12365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2204:51:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2199:56:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 12367,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2198:58:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2194:62:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2172:84:62"
                      },
                      {
                        "expression": {
                          "id": 12374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12370,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "2271:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12371,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2280:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 12372,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12355,
                              "src": "2289:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2280:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2271:29:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12375,
                        "nodeType": "ExpressionStatement",
                        "src": "2271:29:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12381,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2377:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      ],
                                      "id": 12380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2369:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12379,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2369:7:62",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2369:13:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12377,
                                    "name": "a3CrvGaugeToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12182,
                                    "src": "2343:15:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "2343:25:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2343:40:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12384,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12230,
                                "src": "2387:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2343:50:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e6f7420656e6f7567682061334372764761756765546f6b656e",
                              "id": 12386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2412:59:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken\""
                              },
                              "value": "A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken\""
                              }
                            ],
                            "id": 12376,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2317:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:169:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12388,
                        "nodeType": "ExpressionStatement",
                        "src": "2317:169:62"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12389,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "2551:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 12390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2561:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2551:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12407,
                        "nodeType": "IfStatement",
                        "src": "2547:130:62",
                        "trueBody": {
                          "id": 12406,
                          "nodeType": "Block",
                          "src": "2564:113:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12395,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12220,
                                    "src": "2597:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 12400,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "2629:4:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          ],
                                          "id": 12399,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2621:7:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 12398,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2621:7:62",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 12401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2621:13:62",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12396,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12223,
                                        "src": "2606:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1107",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 12397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1046,
                                      "src": "2606:14:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 12402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2606:29:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12392,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12223,
                                    "src": "2583:4:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1056,
                                  "src": "2583:13:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2583:53:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12404,
                              "nodeType": "ExpressionStatement",
                              "src": "2583:53:62"
                            },
                            {
                              "functionReturnParameters": 12233,
                              "id": 12405,
                              "nodeType": "Return",
                              "src": "2655:7:62"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12411,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2835:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 12412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2843:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 12408,
                              "name": "rewardGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12176,
                              "src": "2814:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                "typeString": "contract IRewardOnlyGauge"
                              }
                            },
                            "id": 12410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9594,
                            "src": "2814:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,bool) external"
                            }
                          },
                          "id": 12413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2814:35:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12414,
                        "nodeType": "ExpressionStatement",
                        "src": "2814:35:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12420,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2919:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      ],
                                      "id": 12419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2911:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12418,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2911:7:62",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12421,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2911:13:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12416,
                                    "name": "a3CrvToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12179,
                                    "src": "2890:10:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "2890:20:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2890:35:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12423,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12230,
                                "src": "2929:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2890:45:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e6f7420656e6f756768206133437276546f6b656e206166746572207769746864726177",
                              "id": 12425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2954:69:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw\""
                              },
                              "value": "A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw\""
                              }
                            ],
                            "id": 12415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2864:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2864:174:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12427,
                        "nodeType": "ExpressionStatement",
                        "src": "2864:174:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12431,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12225,
                              "src": "3157:8:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12436,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3196:4:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    ],
                                    "id": 12435,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3188:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12434,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3188:7:62",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12437,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3188:13:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 12432,
                                  "name": "a3CrvToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12179,
                                  "src": "3167:10:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 12433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1046,
                                "src": "3167:20:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 12438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3167:35:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12428,
                              "name": "a3CrvToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12179,
                              "src": "3137:10:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "3137:19:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 12439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3137:66:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12440,
                        "nodeType": "ExpressionStatement",
                        "src": "3137:66:62"
                      }
                    ]
                  },
                  "id": 12442,
                  "nodeType": "IfStatement",
                  "src": "1301:1914:62",
                  "trueBody": {
                    "id": 12353,
                    "nodeType": "Block",
                    "src": "1350:762:62",
                    "statements": [
                      {
                        "assignments": [
                          12282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12282,
                            "mutability": "mutable",
                            "name": "denominator",
                            "nameLocation": "1412:11:62",
                            "nodeType": "VariableDeclaration",
                            "scope": 12353,
                            "src": "1404:19:62",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12281,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1404:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12296,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 12283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1426:2:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 12293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3138",
                                  "id": 12284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1431:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 12288,
                                              "name": "a3CrvToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12179,
                                              "src": "1459:10:62",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            ],
                                            "id": 12287,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1451:7:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 12286,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1451:7:62",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 12289,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1451:19:62",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 12285,
                                        "name": "IERC20Metadata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "1436:14:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1132_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      },
                                      "id": 12290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1436:35:62",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20Metadata_$1132",
                                        "typeString": "contract IERC20Metadata"
                                      }
                                    },
                                    "id": 12291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1131,
                                    "src": "1436:44:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 12292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1436:46:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1431:51:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 12294,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1430:53:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1426:57:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1404:79:62"
                      },
                      {
                        "expression": {
                          "id": 12301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12297,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "1498:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12298,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "1507:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 12299,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12282,
                              "src": "1516:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1507:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1498:29:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12302,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:29:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12308,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "1599:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      ],
                                      "id": 12307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1591:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12306,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1591:7:62",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1591:13:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12304,
                                    "name": "a3CrvToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12179,
                                    "src": "1570:10:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "1570:20:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1570:35:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12311,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12230,
                                "src": "1609:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1570:45:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e6f7420656e6f756768206133437276546f6b656e",
                              "id": 12313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1634:54:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken\""
                              },
                              "value": "A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken\""
                              }
                            ],
                            "id": 12303,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1544:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:159:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12315,
                        "nodeType": "ExpressionStatement",
                        "src": "1544:159:62"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12316,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "1768:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 12317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1778:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1768:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12334,
                        "nodeType": "IfStatement",
                        "src": "1764:130:62",
                        "trueBody": {
                          "id": 12333,
                          "nodeType": "Block",
                          "src": "1781:113:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12322,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12220,
                                    "src": "1814:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 12327,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "1846:4:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          ],
                                          "id": 12326,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1838:7:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 12325,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1838:7:62",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 12328,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1838:13:62",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12323,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12223,
                                        "src": "1823:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1107",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 12324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1046,
                                      "src": "1823:14:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 12329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1823:29:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12319,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12223,
                                    "src": "1800:4:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1056,
                                  "src": "1800:13:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1800:53:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12331,
                              "nodeType": "ExpressionStatement",
                              "src": "1800:53:62"
                            },
                            {
                              "functionReturnParameters": 12233,
                              "id": 12332,
                              "nodeType": "Return",
                              "src": "1872:7:62"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 12340,
                                  "name": "rewardGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12176,
                                  "src": "2020:11:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                    "typeString": "contract IRewardOnlyGauge"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                    "typeString": "contract IRewardOnlyGauge"
                                  }
                                ],
                                "id": 12339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2012:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 12338,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2012:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 12341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2012:20:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12342,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2034:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12335,
                              "name": "a3CrvToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12179,
                              "src": "1993:10:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1076,
                            "src": "1993:18:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 12343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1993:48:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12344,
                        "nodeType": "ExpressionStatement",
                        "src": "1993:48:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12348,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2076:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 12349,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12225,
                              "src": "2084:8:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 12350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2094:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 12345,
                              "name": "rewardGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12176,
                              "src": "2056:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                "typeString": "contract IRewardOnlyGauge"
                              }
                            },
                            "id": 12347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9568,
                            "src": "2056:19:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,bool) external"
                            }
                          },
                          "id": 12351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2056:44:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12352,
                        "nodeType": "ExpressionStatement",
                        "src": "2056:44:62"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "62ac7538",
            "id": 12444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nameLocation": "776:8:62",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "921:8:62"
            },
            "parameters": {
              "id": 12231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12220,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "803:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "795:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12223,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "828:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "821:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1107",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12221,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1107,
                      "src": "821:6:62"
                    },
                    "referencedDeclaration": 1107,
                    "src": "821:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12225,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "851:8:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "843:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12228,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "877:2:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "870:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1107",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12226,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1107,
                      "src": "870:6:62"
                    },
                    "referencedDeclaration": 1107,
                    "src": "870:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12230,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "898:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "890:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:127:62"
            },
            "returnParameters": {
              "id": 12233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:62"
            },
            "scope": 12445,
            "src": "767:2455:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12446,
        "src": "312:2913:62",
        "usedErrors": []
      }
    ],
    "src": "33:3194:62"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/token_exchanges/A3Crv2A3CrvGaugeTokenExchange.sol",
    "exportedSymbols": {
      "A3Crv2A3CrvGaugeTokenExchange": [
        12445
      ],
      "IERC20": [
        1107
      ],
      "IERC20Metadata": [
        1132
      ],
      "IRewardOnlyGauge": [
        9647
      ],
      "ITokenExchange": [
        10842
      ]
    },
    "id": 12446,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12167,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:62"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 12168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 1108,
        "src": "68:56:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 12169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 1133,
        "src": "126:75:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ITokenExchange.sol",
        "file": "../interfaces/ITokenExchange.sol",
        "id": 12170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 10843,
        "src": "203:42:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/connectors/curve/interfaces/IRewardOnlyGauge.sol",
        "file": "../connectors/curve/interfaces/IRewardOnlyGauge.sol",
        "id": 12171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12446,
        "sourceUnit": 9648,
        "src": "247:61:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12172,
              "name": "ITokenExchange",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10842,
              "src": "354:14:62"
            },
            "id": 12173,
            "nodeType": "InheritanceSpecifier",
            "src": "354:14:62"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12445,
        "linearizedBaseContracts": [
          12445,
          10842
        ],
        "name": "A3Crv2A3CrvGaugeTokenExchange",
        "nameLocation": "321:29:62",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "34c0d442",
            "id": 12176,
            "mutability": "mutable",
            "name": "rewardGauge",
            "nameLocation": "400:11:62",
            "nodeType": "VariableDeclaration",
            "scope": 12445,
            "src": "376:35:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
              "typeString": "contract IRewardOnlyGauge"
            },
            "typeName": {
              "id": 12175,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12174,
                "name": "IRewardOnlyGauge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9647,
                "src": "376:16:62"
              },
              "referencedDeclaration": 9647,
              "src": "376:16:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                "typeString": "contract IRewardOnlyGauge"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d864752",
            "id": 12179,
            "mutability": "mutable",
            "name": "a3CrvToken",
            "nameLocation": "432:10:62",
            "nodeType": "VariableDeclaration",
            "scope": 12445,
            "src": "418:24:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1107",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12178,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12177,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1107,
                "src": "418:6:62"
              },
              "referencedDeclaration": 1107,
              "src": "418:6:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1107",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "86d551c7",
            "id": 12182,
            "mutability": "mutable",
            "name": "a3CrvGaugeToken",
            "nameLocation": "463:15:62",
            "nodeType": "VariableDeclaration",
            "scope": 12445,
            "src": "449:29:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1107",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12181,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12180,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1107,
                "src": "449:6:62"
              },
              "referencedDeclaration": 1107,
              "src": "449:6:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1107",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12217,
              "nodeType": "Block",
              "src": "520:239:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12188,
                          "name": "_curveGauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12184,
                          "src": "539:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "562:1:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "554:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12189,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "554:7:62",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "554:10:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "539:25:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
                        "id": 12194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "566:26:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                          "typeString": "literal_string \"Zero address not allowed\""
                        },
                        "value": "Zero address not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
                          "typeString": "literal_string \"Zero address not allowed\""
                        }
                      ],
                      "id": 12187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "531:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:62:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12196,
                  "nodeType": "ExpressionStatement",
                  "src": "531:62:62"
                },
                {
                  "expression": {
                    "id": 12201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12197,
                      "name": "rewardGauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12176,
                      "src": "606:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                        "typeString": "contract IRewardOnlyGauge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12199,
                          "name": "_curveGauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12184,
                          "src": "637:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12198,
                        "name": "IRewardOnlyGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9647,
                        "src": "620:16:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRewardOnlyGauge_$9647_$",
                          "typeString": "type(contract IRewardOnlyGauge)"
                        }
                      },
                      "id": 12200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "620:29:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                        "typeString": "contract IRewardOnlyGauge"
                      }
                    },
                    "src": "606:43:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                      "typeString": "contract IRewardOnlyGauge"
                    }
                  },
                  "id": 12202,
                  "nodeType": "ExpressionStatement",
                  "src": "606:43:62"
                },
                {
                  "expression": {
                    "id": 12209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12203,
                      "name": "a3CrvToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12179,
                      "src": "660:10:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12205,
                              "name": "rewardGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12176,
                              "src": "680:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                "typeString": "contract IRewardOnlyGauge"
                              }
                            },
                            "id": 12206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lp_token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9604,
                            "src": "680:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () external returns (address)"
                            }
                          },
                          "id": 12207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "680:22:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12204,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "673:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1107_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 12208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "673:30:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "660:43:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 12210,
                  "nodeType": "ExpressionStatement",
                  "src": "660:43:62"
                },
                {
                  "expression": {
                    "id": 12215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12211,
                      "name": "a3CrvGaugeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12182,
                      "src": "714:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12213,
                          "name": "_curveGauge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12184,
                          "src": "739:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12212,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "732:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1107_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 12214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "732:19:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "714:37:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 12216,
                  "nodeType": "ExpressionStatement",
                  "src": "714:37:62"
                }
              ]
            },
            "id": 12218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12184,
                  "mutability": "mutable",
                  "name": "_curveGauge",
                  "nameLocation": "507:11:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12218,
                  "src": "499:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:21:62"
            },
            "returnParameters": {
              "id": 12186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:62"
            },
            "scope": 12445,
            "src": "487:272:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10841
            ],
            "body": {
              "id": 12443,
              "nodeType": "Block",
              "src": "930:2292:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12235,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12223,
                                  "src": "964:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12236,
                                  "name": "a3CrvToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12179,
                                  "src": "972:10:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "964:18:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12238,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12228,
                                  "src": "986:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12239,
                                  "name": "a3CrvGaugeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12182,
                                  "src": "992:15:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "986:21:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "964:43:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 12242,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "963:45:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12243,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12223,
                                  "src": "1030:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12244,
                                  "name": "a3CrvGaugeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12182,
                                  "src": "1038:15:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "1030:23:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$1107",
                                  "typeString": "contract IERC20"
                                },
                                "id": 12248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12246,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12228,
                                  "src": "1057:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 12247,
                                  "name": "a3CrvToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12179,
                                  "src": "1063:10:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "1057:16:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1030:43:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 12250,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1029:45:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "963:111:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a20536f6d6520746f6b656e206e6f7420636f6d70617469626c65",
                        "id": 12252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1089:58:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf",
                          "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Some token not compatible\""
                        },
                        "value": "A3Crv2A3CrvGaugeTokenExchange: Some token not compatible"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40e94561a340ebed73c91a130d16b1d94fd6e15d2be9c44946208a924dd60bbf",
                          "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Some token not compatible\""
                        }
                      ],
                      "id": 12234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "941:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:217:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12254,
                  "nodeType": "ExpressionStatement",
                  "src": "941:217:62"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12255,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12230,
                      "src": "1175:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1185:1:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1175:11:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12273,
                  "nodeType": "IfStatement",
                  "src": "1171:118:62",
                  "trueBody": {
                    "id": 12272,
                    "nodeType": "Block",
                    "src": "1188:101:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12261,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12220,
                              "src": "1217:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12266,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "1249:4:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    ],
                                    "id": 12265,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1241:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12264,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1241:7:62",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1241:13:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 12262,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12223,
                                  "src": "1226:4:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 12263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1046,
                                "src": "1226:14:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 12268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1226:29:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12258,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12223,
                              "src": "1203:4:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "1203:13:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 12269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1203:53:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12270,
                        "nodeType": "ExpressionStatement",
                        "src": "1203:53:62"
                      },
                      {
                        "functionReturnParameters": 12233,
                        "id": 12271,
                        "nodeType": "Return",
                        "src": "1271:7:62"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      },
                      "id": 12276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12274,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12223,
                        "src": "1305:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 12275,
                        "name": "a3CrvToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12179,
                        "src": "1313:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1305:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$1107",
                        "typeString": "contract IERC20"
                      },
                      "id": 12279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12277,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12228,
                        "src": "1327:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 12278,
                        "name": "a3CrvGaugeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12182,
                        "src": "1333:15:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1107",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1327:21:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1305:43:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12441,
                    "nodeType": "Block",
                    "src": "2118:1097:62",
                    "statements": [
                      {
                        "assignments": [
                          12355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12355,
                            "mutability": "mutable",
                            "name": "denominator",
                            "nameLocation": "2180:11:62",
                            "nodeType": "VariableDeclaration",
                            "scope": 12441,
                            "src": "2172:19:62",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12354,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2172:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12369,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 12356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2194:2:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 12366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3138",
                                  "id": 12357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2199:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 12361,
                                              "name": "a3CrvGaugeToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12182,
                                              "src": "2227:15:62",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            ],
                                            "id": 12360,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2219:7:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 12359,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2219:7:62",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 12362,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2219:24:62",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 12358,
                                        "name": "IERC20Metadata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "2204:14:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1132_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      },
                                      "id": 12363,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2204:40:62",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20Metadata_$1132",
                                        "typeString": "contract IERC20Metadata"
                                      }
                                    },
                                    "id": 12364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1131,
                                    "src": "2204:49:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 12365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2204:51:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2199:56:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 12367,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2198:58:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2194:62:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2172:84:62"
                      },
                      {
                        "expression": {
                          "id": 12374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12370,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "2271:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12371,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2280:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 12372,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12355,
                              "src": "2289:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2280:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2271:29:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12375,
                        "nodeType": "ExpressionStatement",
                        "src": "2271:29:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12381,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2377:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      ],
                                      "id": 12380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2369:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12379,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2369:7:62",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2369:13:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12377,
                                    "name": "a3CrvGaugeToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12182,
                                    "src": "2343:15:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "2343:25:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2343:40:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12384,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12230,
                                "src": "2387:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2343:50:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e6f7420656e6f7567682061334372764761756765546f6b656e",
                              "id": 12386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2412:59:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken\""
                              },
                              "value": "A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_08a123c43b5d17cdead3b6adf727a6576fdc122c19275e85327610e34fdc2bc2",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvGaugeToken\""
                              }
                            ],
                            "id": 12376,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2317:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:169:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12388,
                        "nodeType": "ExpressionStatement",
                        "src": "2317:169:62"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12389,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "2551:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 12390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2561:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2551:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12407,
                        "nodeType": "IfStatement",
                        "src": "2547:130:62",
                        "trueBody": {
                          "id": 12406,
                          "nodeType": "Block",
                          "src": "2564:113:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12395,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12220,
                                    "src": "2597:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 12400,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "2629:4:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          ],
                                          "id": 12399,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2621:7:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 12398,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2621:7:62",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 12401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2621:13:62",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12396,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12223,
                                        "src": "2606:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1107",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 12397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1046,
                                      "src": "2606:14:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 12402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2606:29:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12392,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12223,
                                    "src": "2583:4:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1056,
                                  "src": "2583:13:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2583:53:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12404,
                              "nodeType": "ExpressionStatement",
                              "src": "2583:53:62"
                            },
                            {
                              "functionReturnParameters": 12233,
                              "id": 12405,
                              "nodeType": "Return",
                              "src": "2655:7:62"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12411,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2835:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 12412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2843:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 12408,
                              "name": "rewardGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12176,
                              "src": "2814:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                "typeString": "contract IRewardOnlyGauge"
                              }
                            },
                            "id": 12410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9594,
                            "src": "2814:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,bool) external"
                            }
                          },
                          "id": 12413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2814:35:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12414,
                        "nodeType": "ExpressionStatement",
                        "src": "2814:35:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12420,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "2919:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      ],
                                      "id": 12419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2911:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12418,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2911:7:62",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12421,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2911:13:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12416,
                                    "name": "a3CrvToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12179,
                                    "src": "2890:10:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "2890:20:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2890:35:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12423,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12230,
                                "src": "2929:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2890:45:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e6f7420656e6f756768206133437276546f6b656e206166746572207769746864726177",
                              "id": 12425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2954:69:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw\""
                              },
                              "value": "A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b04543575ab297185945ed5159b502a66572f44e134da062ef85191fe42aaa5e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken after withdraw\""
                              }
                            ],
                            "id": 12415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2864:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2864:174:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12427,
                        "nodeType": "ExpressionStatement",
                        "src": "2864:174:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12431,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12225,
                              "src": "3157:8:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 12436,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3196:4:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                        "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                      }
                                    ],
                                    "id": 12435,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3188:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 12434,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3188:7:62",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 12437,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3188:13:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 12432,
                                  "name": "a3CrvToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12179,
                                  "src": "3167:10:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1107",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 12433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1046,
                                "src": "3167:20:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 12438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3167:35:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12428,
                              "name": "a3CrvToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12179,
                              "src": "3137:10:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "3137:19:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 12439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3137:66:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12440,
                        "nodeType": "ExpressionStatement",
                        "src": "3137:66:62"
                      }
                    ]
                  },
                  "id": 12442,
                  "nodeType": "IfStatement",
                  "src": "1301:1914:62",
                  "trueBody": {
                    "id": 12353,
                    "nodeType": "Block",
                    "src": "1350:762:62",
                    "statements": [
                      {
                        "assignments": [
                          12282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12282,
                            "mutability": "mutable",
                            "name": "denominator",
                            "nameLocation": "1412:11:62",
                            "nodeType": "VariableDeclaration",
                            "scope": 12353,
                            "src": "1404:19:62",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 12281,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1404:7:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12296,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 12283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1426:2:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 12293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3138",
                                  "id": 12284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1431:2:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 12288,
                                              "name": "a3CrvToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12179,
                                              "src": "1459:10:62",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                                "typeString": "contract IERC20"
                                              }
                                            ],
                                            "id": 12287,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1451:7:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 12286,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1451:7:62",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 12289,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1451:19:62",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 12285,
                                        "name": "IERC20Metadata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "1436:14:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1132_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      },
                                      "id": 12290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1436:35:62",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20Metadata_$1132",
                                        "typeString": "contract IERC20Metadata"
                                      }
                                    },
                                    "id": 12291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1131,
                                    "src": "1436:44:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 12292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1436:46:62",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1431:51:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 12294,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1430:53:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1426:57:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1404:79:62"
                      },
                      {
                        "expression": {
                          "id": 12301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12297,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "1498:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12298,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "1507:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 12299,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12282,
                              "src": "1516:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1507:20:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1498:29:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12302,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:29:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 12308,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "1599:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                          "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                        }
                                      ],
                                      "id": 12307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1591:7:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 12306,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1591:7:62",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 12309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1591:13:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12304,
                                    "name": "a3CrvToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12179,
                                    "src": "1570:10:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "1570:20:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 12310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1570:35:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12311,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12230,
                                "src": "1609:6:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1570:45:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41334372763241334372764761756765546f6b656e45786368616e67653a204e6f7420656e6f756768206133437276546f6b656e",
                              "id": 12313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1634:54:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken\""
                              },
                              "value": "A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d36fa278d4e7b2178e25ee71f5750c5c7060383b3941d0f72876f4350ae7d37e",
                                "typeString": "literal_string \"A3Crv2A3CrvGaugeTokenExchange: Not enough a3CrvToken\""
                              }
                            ],
                            "id": 12303,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1544:7:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:159:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12315,
                        "nodeType": "ExpressionStatement",
                        "src": "1544:159:62"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12316,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "1768:6:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 12317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1778:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1768:11:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12334,
                        "nodeType": "IfStatement",
                        "src": "1764:130:62",
                        "trueBody": {
                          "id": 12333,
                          "nodeType": "Block",
                          "src": "1781:113:62",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12322,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12220,
                                    "src": "1814:7:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 12327,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "1846:4:62",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_A3Crv2A3CrvGaugeTokenExchange_$12445",
                                              "typeString": "contract A3Crv2A3CrvGaugeTokenExchange"
                                            }
                                          ],
                                          "id": 12326,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1838:7:62",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 12325,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1838:7:62",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 12328,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1838:13:62",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 12323,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12223,
                                        "src": "1823:4:62",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1107",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 12324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1046,
                                      "src": "1823:14:62",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 12329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1823:29:62",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12319,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12223,
                                    "src": "1800:4:62",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1107",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 12321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1056,
                                  "src": "1800:13:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 12330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1800:53:62",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12331,
                              "nodeType": "ExpressionStatement",
                              "src": "1800:53:62"
                            },
                            {
                              "functionReturnParameters": 12233,
                              "id": 12332,
                              "nodeType": "Return",
                              "src": "1872:7:62"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 12340,
                                  "name": "rewardGauge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12176,
                                  "src": "2020:11:62",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                    "typeString": "contract IRewardOnlyGauge"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                    "typeString": "contract IRewardOnlyGauge"
                                  }
                                ],
                                "id": 12339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2012:7:62",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 12338,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2012:7:62",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 12341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2012:20:62",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 12342,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2034:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 12335,
                              "name": "a3CrvToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12179,
                              "src": "1993:10:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1107",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 12337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1076,
                            "src": "1993:18:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 12343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1993:48:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12344,
                        "nodeType": "ExpressionStatement",
                        "src": "1993:48:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 12348,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12230,
                              "src": "2076:6:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 12349,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12225,
                              "src": "2084:8:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 12350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2094:5:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 12345,
                              "name": "rewardGauge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12176,
                              "src": "2056:11:62",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardOnlyGauge_$9647",
                                "typeString": "contract IRewardOnlyGauge"
                              }
                            },
                            "id": 12347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9568,
                            "src": "2056:19:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,bool) external"
                            }
                          },
                          "id": 12351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2056:44:62",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12352,
                        "nodeType": "ExpressionStatement",
                        "src": "2056:44:62"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "62ac7538",
            "id": 12444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nameLocation": "776:8:62",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "921:8:62"
            },
            "parameters": {
              "id": 12231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12220,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "803:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "795:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12223,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "828:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "821:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1107",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12221,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1107,
                      "src": "821:6:62"
                    },
                    "referencedDeclaration": 1107,
                    "src": "821:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12225,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "851:8:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "843:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12228,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "877:2:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "870:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1107",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12226,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1107,
                      "src": "870:6:62"
                    },
                    "referencedDeclaration": 1107,
                    "src": "870:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1107",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12230,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "898:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12444,
                  "src": "890:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:127:62"
            },
            "returnParameters": {
              "id": 12233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:62"
            },
            "scope": 12445,
            "src": "767:2455:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12446,
        "src": "312:2913:62",
        "usedErrors": []
      }
    ],
    "src": "33:3194:62"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {},
      "links": {},
      "address": "0x32405a7Cfb83d1b586703018ac25f7Cf808a9575",
      "transactionHash": "0x4960e8a6fe143f7f183e488ddba29570d64a34cc693235a0c5b86e9d868fe334"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-10-20T11:25:52.817Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}